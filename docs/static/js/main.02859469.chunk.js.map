{"version":3,"sources":["components/ui/Error.js","hooks/useFetch.js","helpers/constants.js","helpers/getPerson.js","components/utils/utils.js","components/Search.js","hooks/useForm.js","components/ui/PaginationUi.js","img/no_img.png","helpers/getRatingsImdb.js","components/ui/MovieModal.js","hooks/useFetchRatings.js","components/MovieGridItem.js","components/MovieGrid.js","img/tmdb_logo_blue_square_2.svg","components/ui/Menu.js","components/ui/TopMovies.js","MoviesApp.js","index.js"],"names":["Error","mensaje","Alert","severity","useFetch","url","isMounted","useRef","useState","data","loading","error","state","setState","useEffect","current","fetch","then","resp","json","catch","API_KEY","getPerson","buscar_people","a","people","results","years","yearCurrent","Date","getFullYear","Array","fill","map","numeros","sortBy","index","value","useStyles","makeStyles","theme","formControl","margin","spacing","flexGrow","selectEmpty","marginTop","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","formulario","buscarFiltros","Search","guardarFiltros","initialState","values","setValues","target","name","useForm","titulo","genero","puntuacion","year","with_cast","orden","formFiltersValues","handleFiltersChange","genres","buscarPeliculas","e","preventDefault","console","log","with_castId","trim","autocomplete_cast","document","getElementById","options","length","dataset","classes","Container","maxWidth","onSubmit","className","Typography","variant","color","component","Box","marginBottom","TextField","id","label","onChange","fullWidth","InputProps","startAdornment","InputAdornment","FormControl","InputLabel","shrink","htmlFor","NativeSelect","inputProps","genre","num","sort","Input","list","onKeyUp","innerHTML","cast","Button","onClick","paginacion","alignSelf","PaginationUi","totalpaginas","paginaactual","handlePagination","Pagination","siblingCount","boundaryCount","count","page","getRatingsImdb","imdb_id","url_imdb","encodeURI","Ratings","forEach","r","Source","root","modal","backgroundSize","backgroundRepeat","paper","outline","contenido","closeButton","right","top","generos","flexWrap","listStyle","paddingRight","paddingBottom","castContainer","flexDirection","flexBasis","MovieModal","movieDetails","movieCast","handleClose","open","title","backdrop_path","original_title","original_language","poster_path","overview","tagline","vote_average","vote_count","release_date","runtime","background_url","img_url","ratings","useFetchRatings","Dialog","onClose","aria-labelledby","style","backgroundImage","PaperProps","boxShadow","BackdropProps","DialogContent","src","no_img","alt","IconButton","aria-label","fontSize","Object","keys","mins","hours","Math","floor","minutes","convertMinsToTime","Chip","Value","slice","profile_path","character","media","paddingTop","cardContent","cardTitle","cardAverage","borderBottomLeftRadius","MovieGridItem","movie","React","setOpen","url_actores","data2","filter","result","Card","CardMedia","image","CardContent","lineHeight","CardActions","size","cargando","textAlign","border","total","MovieGrid","busqueda","movies","setMovies","guardarPaginaActual","guardarTotalPaginas","totalresultados","guardarTotalResultados","parameters","paramName","paramValue","queryParams","param","join","total_pages","total_results","consultarApi","LinearProgress","Grid","container","item","xs","sm","xl","menuButton","logo","Menu","setTheme","AppBar","Toolbar","tmdb_logo","FormGroup","FormControlLabel","control","Switch","checked","event","titleBar","background","rating","topSlider","overflow","topTitle","borderLeft","paddingLeft","TopMovies","topUrl","topMovies","GridList","gridList","cols","GridListTile","GridListTileBar","actionIcon","MoviesApp","filtros","darkState","setDarkState","palletType","mainPrimaryColor","indigo","mainSecondaryColor","amber","textSecondaryColor","darkTheme","createMuiTheme","type","primary","main","secondary","text","urlNew","urlRating","ThemeProvider","CssBaseline","ReactDOM","render"],"mappings":"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","file":"static/js/main.02859469.chunk.js","sourcesContent":["import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\n\nconst Error = ({mensaje}) => {\n    return ( \n         \n        <Alert severity=\"error\">{mensaje}</Alert>\n     );\n}\n \nexport default Error;","import { useState, useEffect, useRef } from 'react';\n\n\nexport const useFetch = ( url ) => {\n    \n    const isMounted = useRef(true);\n    const [state, setState] = useState({ data: null, loading: true, error: null });\n\n    useEffect( () => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n\n    useEffect( () => {\n\n        setState({ data: null, loading: true, error: null });\n\n        fetch( url )\n            .then( resp => resp.json() )\n            .then( data => {\n\n                if ( isMounted.current ) {\n                    setState({\n                        loading: false,\n                        error: null,\n                        data\n                    });\n                }\n\n            })\n            .catch( () => {\n                setState({\n                    data: null,\n                    loading: false,\n                    error: 'No se pudo cargar la info'\n                })\n            })\n\n    },[url])\n\n    return state;\n}\n","export const API_KEY = '0799b15d3091f6948d82b2274f8e5226';","import { API_KEY } from './constants';\n\n\nexport const getPerson = async(buscar_people) => {\n\n    const url = `https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&query=${buscar_people}`;\n\n    const resp = await fetch(url);\n    const data = await resp.json();\n\n    const people = data.results;\n\n    return people;\n}\n\n/*\n    Algunos actores salen duplicados, es porque vienen asi de la api, con diferentes ids, y no puedo buscar varios ids a la vez porque tendrian que ser actores que trabajaran juntos en las mismas peliculas\n*/","\n// Array de años\nexport const years = () => {  \n    let yearCurrent = new Date().getFullYear(); \n    let yearStart = 1940;\n\n    return Array(yearCurrent - yearStart)\n        .fill()\n        .map(() => yearCurrent--);\n}\n\n// Array de puntuacion\nexport const numeros = [1,2,3,4,5,6,7,8,9];\n\n\n// Default: popularity.desc\nexport const sortBy =  \n    [\n        {index: 'Popularidad DESC', value: 'popularity.desc'},\n        {index: 'Popularidad ASC', value: 'popularity.asc'},\n        {index: 'Fecha de estreno DESC', value: 'primary_release_date.desc'},\n        {index: 'Fecha de estreno ASC', value: 'primary_release_date.asc'},\n        {index: 'Título original DESC', value: 'original_title.desc'},\n        {index: 'Título original ASC', value: 'original_title.asc'},\n        {index: 'Puntuación DESC', value: 'vote_average.desc'},\n        {index: 'Puntuación ASC', value: 'vote_average.asc'}\n    ];\n\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Error from './ui/Error';\nimport { useForm } from '../hooks/useForm';\nimport { useFetch } from '../hooks/useFetch';\nimport { API_KEY } from '../helpers/constants';\nimport { getPerson } from '../helpers/getPerson';\nimport {numeros, years, sortBy} from './utils/utils';\n\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Container from '@material-ui/core/Container';\nimport { Input } from '@material-ui/core';\n\n//import Paper from '@material-ui/core/Paper';\n//import Accordion from '@material-ui/core/Accordion';\n//import AccordionSummary from '@material-ui/core/AccordionSummary';\n//import AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    //minWidth: 120,\n    flexGrow: 1\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  formulario: {\n    padding: '25px 0'\n  },\n  buscarFiltros: {\n    display: 'flex', \n    justifyContent: 'space-between', \n    alignItems: 'center'\n  }\n}));\n\n\n\nconst Search = ({guardarFiltros}) => {\n\n    const [error, guardarError] = useState(false);\n\n    // Formulario de filtros\n    const [ formFiltersValues, handleFiltersChange ] = useForm( {\n        titulo: '',\n        genero: '',\n        puntuacion: '',\n        year: '',\n        with_cast: '',\n        orden: 'popularity.desc'\n    } );\n  \n    \n    const { titulo, genero, puntuacion, year, with_cast, orden } = formFiltersValues;\n\n    // Get genres to fill select\n    // Con el hook useFetch\n    const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n    const {data} = useFetch(url);\n    const genres = data ? data.genres : [];\n \n\n    // OnSubmit\n    const buscarPeliculas = e => {\n        e.preventDefault();\n        console.log('formFiltersValues');\n        console.log(formFiltersValues);\n\n        let with_castId = '';\n\n        if (with_cast.trim() !== '') {\n            const autocomplete_cast = document.getElementById(\"autocomplete-cast\");\n            // ver si ese [0] esta correcto\n            if ( autocomplete_cast.options.length > 0 ) {\n                with_castId = autocomplete_cast.options[0].dataset.value;\n            } else {\n                with_castId = with_cast;\n            }\n        }\n\n        // esta función sería la que hace la llamada a la api\n        guardarFiltros({\n            ...formFiltersValues,\n            with_cast: with_castId\n        });\n    }\n\n      \n    // Autocompletado\n    const handleKeyUp = (e) => {\n        //console.log(e);\n        const buscar_people = e.target.value;\n        // Cuando haya mas de 3 letras, autocompletar\n        if (buscar_people.length > 2) {\n            \n            // Llenar autocompletado aquí con people\n            // tengo un datalist con id: autocomplete-cast\n            let autocomplete_cast = document.getElementById(\"autocomplete-cast\");\n            autocomplete_cast.innerHTML = '';\n\n            // llamar api get actores\n            getPerson(buscar_people)\n                .then((people) => {\n                   people.map(cast => (\n                        autocomplete_cast.innerHTML += `<option data-value=${cast.id}>\n                            ${cast.name}\n                        </option>`\n                    ))\n                });\n  \n            // OJO, a veces vienen duplicados\n            //(5) [\"Emma Stone\", \"Emma Stone\", \"Emma Stone\", \"Emma Stone\", \"Emma Stoneberg\"]\n        } \n    };\n\n\n    const classes = useStyles();\n\n   \n    return (\n        <Container maxWidth=\"md\">\n        <form onSubmit={buscarPeliculas} className={classes.formulario}>\n           <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">\n           Buscar por título\n            </Typography>\n            <Box marginBottom={'20px'}>\n                <TextField \n                    id=\"standard-basic\"\n                    name=\"titulo\" \n                    label=\"Buscar por titulo\"\n                    color=\"secondary\"\n                    onChange={handleFiltersChange}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <SearchIcon />\n                          </InputAdornment>\n                        ),\n                      }}\n                />\n            </Box>\n            \n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">\n                Buscar por filtros\n            </Typography>\n                <Box className={classes.buscarFiltros}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"genre-native-label-placeholder\" color=\"secondary\">\n                            Género\n                        </InputLabel>\n                        <NativeSelect\n                            value={genero}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'genero',\n                                id: 'genre-native-label-placeholder'\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {genres.map(genre => (\n                                <option \n                                    key={genre.id} \n                                    value={genre.id} \n                                >{genre.name}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"puntuacion-native-label-placeholder\" color=\"secondary\">\n                            Puntuación\n                        </InputLabel>\n                        <NativeSelect\n                            value={puntuacion}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'puntuacion',\n                                id: 'puntuacion-native-label-placeholder',\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {numeros.map(num => (\n                                <option \n                                    key={num} \n                                    value={num} \n                                >+{num}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"year-native-label-placeholder\" color=\"secondary\">\n                            Año\n                        </InputLabel>\n                        <NativeSelect\n                            value={year}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'year',\n                                id: 'year-native-label-placeholder',\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {years().map(year => (\n                                <option \n                                    key={year} \n                                    value={year} \n                                >{year}</option>\n                            ))\n                            }\n                            \n                            <option value=\"1940\">1940</option>\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"orden-native-label-placeholder\" color=\"secondary\">\n                            Orden\n                        </InputLabel>\n                        <NativeSelect\n                            value={orden}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'orden',\n                                id: 'orden-native-label-placeholder',\n                            }}\n                        >\n                            {sortBy.map(sort => (\n                                <option \n                                    key={sort.value} \n                                    value={sort.value} \n                                >{sort.index}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"with_cast\" color=\"secondary\">\n                            Actor/Actriz\n                        </InputLabel>\n                        <Input \n                            list=\"autocomplete-cast\" \n                            id=\"with_cast\"\n                            name=\"with_cast\"\n                            color=\"secondary\"\n                            onChange={handleFiltersChange}\n                            onKeyUp={handleKeyUp}\n                            inputProps={{\n                                list: \"autocomplete-cast\"\n                            }}\n                        />\n                        <datalist id=\"autocomplete-cast\"></datalist>\n                    </FormControl>\n\n\n                    <Button \n                        variant=\"contained\" \n                        color=\"secondary\"\n                        onClick={buscarPeliculas}\n                    >\n                        Buscar\n                    </Button>\n\n                </Box>\n\n\n\n            {error ? <Error mensaje=\"Debe haber al menos un campo de búsqueda\"/> : null}\n        </form>\n        </Container>\n    )\n}\n\nSearch.propTypes = {\n    guardarFiltros: PropTypes.func.isRequired\n}\n\nexport default Search;\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paginacion: {\n        display: 'flex',\n        marginBottom: '20px',\n        justifyContent: 'center',\n        '& > *': {\n            marginTop: theme.spacing(2)\n        },\n        '& > span': {\n            alignSelf: 'center',\n            marginLeft: '10px'\n        }\n    }\n}));\n\n\nconst PaginationUi = ({totalpaginas, paginaactual, handlePagination}) => {\n\n    const classes = useStyles();\n\n    return ( \n        <Container maxWidth=\"xl\" className={classes.paginacion}>\n            <Pagination \n                variant=\"outlined\" \n                shape=\"rounded\" \n                siblingCount={2} \n                boundaryCount={2} \n                count={totalpaginas} \n                page={paginaactual} \n                onChange={handlePagination}\n            />\n            <Typography \n                variant=\"body2\" \n                color=\"textPrimary\" \n                component=\"span\">\n                    {`${paginaactual} de ${totalpaginas}`}\n            </Typography>\n        </Container>\n     );\n}\n \nexport default PaginationUi;","export default __webpack_public_path__ + \"static/media/no_img.04fe48ca.png\";","\nexport const getRatingsImdb = async(imdb_id) => { \n\n    const url_imdb = `https://www.omdbapi.com/?i=${encodeURI(imdb_id)}&apikey=b7618069`;\n\n    const resp = await fetch(url_imdb);\n    const {Ratings} = await resp.json();\n    \n    //console.log('desde getRatingsImdb')\n    //console.log(Ratings)\n\n    Ratings.forEach((r) => {\n        if (r.Source === 'Internet Movie Database') {\n            r.Source = 'IMDB'\n        }\n    });\n\n    return Ratings;\n};\n    /*\n    (3) [{…}, {…}, {…}]\n    0: {Source: \"Internet Movie Database\", Value: \"5.4/10\"}\n    1: {Source: \"Rotten Tomatoes\", Value: \"59%\"}\n    2: {Source: \"Metacritic\", Value: \"60/100\"}\n    */","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\n/*\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Box from '@material-ui/core/Box';\n*/\n\nimport no_img from '../../img/no_img.png';\nimport { useFetchRatings } from '../../hooks/useFetchRatings';\n/*\nimport { getRatingsImdb } from '../../helpers/getRatingsImdb';\nimport { API_KEY } from '../../helpers/constants';\nimport { useFetch } from '../../hooks/useFetch';\n*/\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n      // maxWidth: 345,\n  },\n  modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundSize: 'cover', \n      backgroundRepeat: 'no-repeat'\n  },\n  paper: {\n      //backgroundColor: theme.palette.background.paper,\n      //border: '2px solid #000',\n      //boxShadow: theme.shadows[5],\n      //padding: theme.spacing(2, 4, 3), // multiplica por 8\n      display: 'flex',\n      color: '#fff',\n      //maxWidth: '70%', // esto es para modal, no dialog\n     // boxShadow: '3px 0px 10px #333', // ¿por que no se ve????!!!\n      outline: 0,\n      //backgroundColor: 'rgba(0, 0, 0, .5)', \n      padding: '0px !important',\n  },\n  contenido : {\n      padding: theme.spacing(2, 4)\n  },\n  closeButton: {\n      position: 'absolute', \n      right: '5px',\n      top: '5px'\n  },\n  generos: {\n      display: 'flex', \n      flexWrap: 'wrap',\n      listStyle: 'none', \n      padding: '0',\n      '& > li': {\n          paddingRight: '5px',\n          paddingBottom: '5px'\n      } \n  },\n  castContainer: {\n      padding: '0', \n      display: 'flex'\n  },\n  cast: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: .1,\n      flexBasis: 0, \n      marginRight: theme.spacing(3),\n      '&:last-child': {\n          marginRight: 0\n      }\n  }\n}));\n\n\nexport const MovieModal = ({movieDetails, movieCast, handleClose, open}) => {\n    \n    console.log('movieDetails')\n    console.log(movieDetails)\n\n    const {id, title, original_title, original_language, backdrop_path, poster_path, genres,overview, tagline, vote_average, vote_count, release_date, runtime, imdb_id} = movieDetails;\n\n\n    // imagenes\n    const background_url = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n    const img_url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n\n    // Llamamos a nuestro custom hook useFetchRatings\n    const { ratings } = useFetchRatings(imdb_id);\n\n\n    const convertMinsToTime = (mins) => {\n        let hours = Math.floor(mins / 60);\n        let minutes = mins % 60;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        return `${hours}h ${minutes}mins`;\n    }\n\n\n    const classes = useStyles();\n\n    return (\n        <div>\n        {/* !movies.loading && \n                <div className={classes.cargando}>\n                    <CircularProgress color=\"secondary\" />\n                </div>\n        */}\n\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            className={classes.modal} \n            style={{backgroundImage: `url(${background_url})`}}\n            maxWidth='lg' \n            PaperProps={{\n                style: {\n                backgroundColor: 'rgba(0, 0, 0, .5)', // transparent\n                boxShadow: 'none',\n                borderRadius: '6px'\n                },\n            }}\n            BackdropProps={{\n                style: {\n                    backgroundColor: 'transparent',\n                },\n              }}\n        >\n            <DialogContent  className={classes.paper}>\n                <div style={{display:'flex'}}>\n                    <img src={poster_path ? img_url : no_img} alt={title} style={{maxWidth:'50%'}}/>\n                    <div className={classes.contenido}>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon className={classes.title} style={{ fontSize: 30, color: '#fff' }} />\n                        </IconButton>\n                        <h2 id=\"transition-modal-title\">{title}</h2>\n                        {\n                            tagline\n                            ? <h3 style={{color: 'greenyellow'}}>{tagline}</h3>\n                            : null\n                        }\n                        <p id=\"transition-modal-description\">{overview}</p>\n                        \n                        \n                        { Object.keys(movieDetails).length > 0 ?\n                            <>\n                            <p>Fecha de estreno: {release_date}</p>\n                            <p>Duración: {convertMinsToTime(runtime)}</p>\n                            {genres.length > 0 ?\n                                <>\n                                <p>Géneros:</p>\n                                <ul className={classes.generos}>\n                                    {genres.map((genre) => {\n                                        return (\n                                            <li key={genre.id}>\n                                                <Chip\n                                                    label={genre.name}\n                                                    //color=\"primary\"\n                                                    //className={classes.chip}\n                                                />\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                                </>\n                                : null\n                            }\n                            <p>Puntuacion:</p>\n                            {ratings.length > 0 ?\n                                <>\n                                <li>TMDB: {vote_average} de {vote_count} votos</li>\n                                {ratings.map((r) => {\n                                    return (\n                                        <li key={r.Source}>\n                                            {`${r.Source}: ${r.Value}`}\n                                        </li>\n                                    )\n                                })}\n                                </>\n                            : <li>TMDB: {vote_average} de {vote_count} votos</li>\n                            }\n                            </>\n                        : null\n                        }\n                        \n                        <p>Reviews/criticas:</p>\n                    </div>\n                </div>          \n            </DialogContent>\n            \n            { Object.keys(movieDetails).length > 0 && movieCast.length > 0 ?\n                <div style={{color: 'white', padding: '24px'}}>\n                    <h3>Reparto:</h3>\n                    <Container maxWidth=\"xl\" className={classes.castContainer}>\n                            {movieCast.slice(0, 10).map((cast) => {\n                                return (\n                                    <div key={cast.id} className={classes.cast}>\n                                        <img src={cast.profile_path ? `https://image.tmdb.org/t/p/w185${cast.profile_path}` : no_img} alt={cast.character} style={{maxWidth:'100%'}}/>\n                                        <div style={{padding: '10px 0'}}>\n                                            <span style={{display: 'block'}}>{cast.character}</span>\n                                            <span style={{color: 'grey'}}>{cast.name}</span>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                    </Container>\n                </div>\n            : null\n            }\n        </Dialog>\n        </div>\n\n    )\n\n\n}\n\n\n\n\n\n/*\n\n        <div>\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            className={classes.modal} \n            style={{backgroundImage: `url(${background_url})`}} \n            maxWidth='xl' \n         //   PaperComponent='Modal'\n            PaperProps={{\n                style: {\n                backgroundColor: 'rgba(0, 0, 0, .5)', // transparent\n                boxShadow: 'none',\n                },\n            }}\n            BackdropProps={{\n                style: {\n                    backgroundColor: 'transparent',\n                },\n              }}\n        >\n            <DialogContent  className={classes.paper}>\n                <div style={{display:'flex'}}>\n                    <img src={img_url} alt={title} style={{maxWidth:'50%'}}/>\n                    <div className={classes.contenido}>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon className={classes.title} style={{ fontSize: 30, color: '#fff' }} />\n                        </IconButton>\n                        <h2 id=\"transition-modal-title\">{title}</h2>\n                        <p id=\"transition-modal-description\">{overview}</p>\n                        \n                        \n                        { Object.keys(movieDetails).length > 0 ?\n                            <>\n                            <p>Fecha de estreno: {movieDetails.release_date}</p>\n                            <p>Duración: {movieDetails.runtime}min</p>\n                            <p>Géneros:</p>\n                            <ul className={classes.generos}>\n                                {movieDetails.genres.map((genre) => {\n                                    return (\n                                        <li key={genre.id}>\n                                            <Chip\n                                                label={genre.name}\n                                                //className={classes.chip}\n                                            />\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                            <p>Puntuacion:</p>\n                            <p>Reviews/criticas:</p>\n                            </>\n                        : null\n                        }\n                    </div>\n                </div>          \n            </DialogContent>\n            { Object.keys(movieDetails).length > 0 && movieCast.length > 0 ?\n                <div style={{color: 'white', padding: '24px'}}>\n                    <h3>Reparto:</h3>\n                    <Container maxWidth=\"xl\" className={classes.castContainer}>\n                            {movieCast.slice(0, 10).map((cast) => {\n                                return (\n                                    <div key={cast.id} className={classes.cast}>\n                                        <img src={cast.profile_path ? `https://image.tmdb.org/t/p/w185${cast.profile_path}` : no_img} alt={cast.character} style={{maxWidth:'100%'}}/>\n                                        <div style={{padding: '10px 0'}}>\n                                            <span style={{display: 'block'}}>{cast.character}</span>\n                                            <span style={{color: 'grey'}}>{cast.name}</span>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                    </Container>\n                </div>\n            : null\n            }\n        </Dialog>\n        </div>\n*/\n\n\n\n\n\n\n\n\n/*\n\n  \n     <div>\n     <Modal\n       aria-labelledby=\"transition-modal-title\"\n       aria-describedby=\"transition-modal-description\"\n       className={classes.modal}\n       open={open}\n       onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      style={{backgroundImage: `url(${background_url})`}}\n      /*\n      style={{backgroundImage: `linear-gradient(to right,white 0%,black 100%),url(${background_url})`,\n      backgroundBlendMode: 'soft-light'}}\n       */\n/*    >\n        <>\n       <Typography variant=\"body2\" component=\"span\" style={{position: 'absolute', right: '15px',top: '15px'}}>\n           <CloseIcon className={classes.title} style={{ fontSize: 70, color: '#fff' }}  onClick={handleClose} />\n       </Typography>\n      <Fade in={open}>\n\n        <div className={classes.paper}>\n           <img src={img_url} alt={title} style={{maxWidth:'50%'}}/>\n           <div className={classes.contenido}>\n               <h2 id=\"transition-modal-title\">{title}</h2>\n               <p id=\"transition-modal-description\">{overview}</p>\n               <p>Fecha de estreno: {movieDetails.release_date}</p>\n               <p>Duración: {movieDetails.runtime}min</p>\n               <p>Géneros:</p>\n               \n               { Object.keys(movieDetails).length > 0 ?\n               <ul style={{display: 'flex', listStyle: 'none', padding: '0'}}>\n                   {movieDetails.genres.map((genre) => {\n                       return (\n                           <li key={genre.id} style={{paddingRight: '5px'}}>\n                               <Chip\n                                   label={genre.name}\n                                   //className={classes.chip}\n                               />\n                           </li>\n                       )\n                   })}\n               </ul>\n               : null\n               }\n\n           </div>\n        </div>\n      </Fade>\n      </>\n    </Modal>\n  </div>\n\n\n\n*/","\n\nimport {useState, useEffect} from 'react';\nimport { getRatingsImdb } from '../helpers/getRatingsImdb';\n\n\nexport const useFetchRatings = (imdb_id) => {\n\n    const [state, setState] = useState({\n        ratings: []\n    })\n\n    useEffect( () => {\n        getRatingsImdb(imdb_id) \n            .then( r => {\n                //console.log(r);\n                setState({\n                    ratings: r\n                });\n            })\n    }, [imdb_id]) \n\n    return state;\n}\n\n","//import React, { useEffect, useState } from 'react';\nimport React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Box from '@material-ui/core/Box';\n/*\nimport StarIcon from '@material-ui/icons/Star';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { findByLabelText } from '@testing-library/react';\nimport clsx from 'clsx';\n*/\n\nimport no_img from '../img/no_img.png';\nimport { API_KEY } from '../helpers/constants';\n\nimport { MovieModal } from './ui/MovieModal';\nimport { useFetch } from '../hooks/useFetch';\n//import { useFetchRatings } from '../hooks/useFetchRatings';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n        position: 'relative',\n        borderRadius: '6px'\n    },\n    media: {\n        //height: 0,\n        //paddingTop: '56.25%', // 16:9\n       // height: '420px'\n       height:0,\n       paddingTop: '145%'\n    },\n    cardContent: {\n        display: 'flex',\n        alignItems: 'center',\n        //padding: theme.spacing(1)\n    },\n    cardTitle: {\n        flexGrow: 1,\n    },\n    cardAverage: {\n        display: 'flex',\n        position: 'absolute',\n        /*top: '6px',\n        right: '12px',*/\n        top: 0,\n        right: 0,\n        backgroundColor: 'rgba(0,0,0, .4)',\n        padding: '5px 5px 0 5px',\n        borderBottomLeftRadius: '6px',\n  \n        '& > span:last-child': {\n            alignSelf: 'center'\n        }\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundSize: 'cover', \n        backgroundRepeat: 'no-repeat'\n    },\n    paper: {\n        //backgroundColor: theme.palette.background.paper,\n        //border: '2px solid #000',\n        //boxShadow: theme.shadows[5],\n        //padding: theme.spacing(2, 4, 3), // multiplica por 8\n        display: 'flex',\n        color: '#fff',\n        outline: 0,\n        //backgroundColor: 'rgba(0, 0, 0, .5)', \n        padding: '0px !important',\n    },\n    contenido : {\n        padding: theme.spacing(2, 4)\n    },\n    closeButton: {\n        position: 'absolute', \n        right: '5px',\n        top: '5px'\n    },\n    generos: {\n        display: 'flex', \n        listStyle: 'none', \n        padding: '0',\n        '& > li': {\n            paddingRight: '5px'\n        } \n    },\n    castContainer: {\n        \n    },\n    cast: {\n        display: 'flex',\n        flexDirection: 'column', \n        flexGrow: 1, \n        flexBasis: 0, \n        marginRight: theme.spacing(3),\n        '&:last-child': {\n            marginRight: 0\n        }\n    }\n}));\n\n\n\nconst MovieGridItem = (movie) => {\n    /*const [movieDetails, setDetailedMovie] = useState({\n        movie: [],\n        loading: true\n    });*/\n\n    //const [loading, setLoading] = useState([]); \n   // const [movieDetails, setDetailedMovie] = useState({});\n   // const [movieCast, setCastMovie] = useState({});\n    const [open, setOpen] = React.useState(false);\n\n    const {id, title, original_title, original_language, poster_path, vote_average} = movie;\n\n    // imagenes\n    const img_url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n    const classes = useStyles();\n\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n/*\n    const detalles = async (id) => {\n        //console.log(id)\n\n        let url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n        console.log({url});\n      // la url final encodeURI(url)  \n\n        const resp = await fetch(url);\n        const data = await resp.json();\n        console.log('detalles');\n        console.log(data)\n        setDetailedMovie(data);\n\n\n        // ACTORES\n        let url_actores = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n        console.log({url_actores});\n        // la url final encodeURI(url)  \n\n        const resp2 = await fetch(url_actores);\n        const data2 = await resp2.json();\n        //console.log(data2);\n        //console.log(data2.cast)\n        const resultado = data2.cast;\n        // no mostrar los que no tengan foto\n        const top = resultado.filter((result) => result.profile_path );\n        setCastMovie(top);\n    };\n*/\n\n\n\n    // OJO: estamos dentro de un bucle\n    // Con el hook useFetch\n    let url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n    const {data} = useFetch(url);\n    const movieDetails = data ? data : [];\n\n    let url_actores = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n    const {data:data2} = useFetch(url_actores);\n    const movieCast = data2 \n                        ? data2.cast.filter((result) => result.profile_path ) \n                        : [];\n\n\n                            \n    return (\n        <>\n            <Card className={classes.root}>\n                \n                <CardMedia\n                    className={classes.media}\n                    image={poster_path ? img_url : no_img}\n                    ///title={title}\n                />\n                  \n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\" className={classes.cardTitle}>\n                        {original_language === 'es' ? original_title : title}\n                    </Typography>\n\n                    <Box className={classes.cardAverage}>\n                        <Typography variant=\"body2\" color=\"secondary\" component=\"span\" style={{lineHeight: 'initial'}}>\n                            <StarBorderIcon className={classes.title} style={{ fontSize: '2rem' }}/>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"secondary\" component=\"span\" style={{ fontSize: '1.4rem'}}>\n                            {vote_average}\n                        </Typography>\n                    </Box>\n                </CardContent>\n                <CardActions style={{display: 'flex', justifyContent: 'center'}}>\n                    <Button \n                    style={{width: '100%'}}\n                        size=\"small\" \n                        color=\"primary\" \n                        //variant=\"outlined\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            //detalles(id);\n                            handleOpen();\n                        }}\n                    >\n                        Ver detalles\n                    </Button>\n                </CardActions>\n\n            </Card>\n        \n\n            {/*\n                // Abrir detalles de la pelicula en una ventana modal\n            */}\n            { open ?  \n                <MovieModal\n                    movieDetails={movieDetails}\n                    movieCast={movieCast}\n                    handleClose={handleClose}\n                    open={open}\n                   // ratings={ratings}\n                />\n            : null}\n        </>\n    )\n}\n\nexport default MovieGridItem;\n\n\n\n/*\n               adult: false\n               backdrop_path: \"/srYya1ZlI97Au4jUYAktDe3avyA.jpg\"\n               belongs_to_collection: {id: 468552, name: \"Wonder Woman Collection\", poster_path: \"/8AQRfTuTHeFTddZN4IUAqprN8Od.jpg\", backdrop_path: \"/n9KlvCOBFDmSyw3BgNrkUkxMFva.jpg\"}\n               budget: 200000000\n               genres: (3) [{…}, {…}, {…}]\n               homepage: \"https://www.warnerbros.com/movies/wonder-woman-1984\"\n               id: 464052\n               imdb_id: \"tt7126948\"\n               original_language: \"en\"\n               original_title: \"Wonder Woman 1984\"\n               overview: \"Wonder Woman comes into conflict with the Soviet Union during the Cold War in the 1980s and finds a formidable foe by the name of the Cheetah.\"\n               popularity: 2089.125\n               poster_path: \"/8UlWHLMpgZm9bx6QYh0NFoq67TZ.jpg\"\n               production_companies: (6) [{…}, {…}, {…}, {…}, {…}, {…}]\n               production_countries: [{…}]\n               release_date: \"2020-12-16\"\n               revenue: 159533000\n               runtime: 152\n               spoken_languages: [{…}]\n               status: \"Released\"\n               tagline: \"A new era of wonder begins.\"\n               title: \"Wonder Woman 1984\"\n               video: false\n               vote_average: 6.9\n               vote_count: 3829\n               \n*/\n\n\n","import React, { useEffect, useState } from 'react';\nimport { API_KEY } from '../helpers/constants';\n//import { useFetch } from '../hooks/useFetch';\nimport PaginationUi from './ui/PaginationUi';\nimport MovieGridItem from './MovieGridItem';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n//import CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    cargando: {\n        textAlign: 'center',\n        border: '1px solid red'\n    },\n    total: {\n        textAlign: 'center',\n        marginTop: '10px'\n    }\n  }));\n\n\nconst MovieGrid = ({busqueda}) => {\n\n    const { titulo, genero, puntuacion, year, with_cast, orden } = busqueda;\n\n    // state de la app\n    const [movies, setMovies] = useState({\n        movies: [],\n        loading: true\n    });\n\n    // Paginacion\n    const [paginaactual, guardarPaginaActual] = useState(1);\n    const [totalpaginas, guardarTotalPaginas] = useState(1);\n    const [totalresultados, guardarTotalResultados] = useState(1);\n\n\n    useEffect(() => {\n        const consultarApi = async () => {\n           \n            let url = '';\n            if (titulo.trim() !== '') {\n                url = `https://api.themoviedb.org/3/search/movie?query=${titulo}&api_key=${API_KEY}&page=${paginaactual}`;\n            } else {\n                const parameters = [\n                    {paramName: 'with_genres', paramValue: genero},\n                    {paramName: 'with_cast', paramValue: with_cast},\n                    {paramName: 'vote_average.gte', paramValue: puntuacion},\n                    {paramName: 'primary_release_year', paramValue: year},\n                    {paramName: 'sort_by', paramValue: orden},\n                ];        \n                \n                url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${paginaactual}`;\n                \n                // TODO: poner un minimo de vote_count para buscar por puntuacion\n\n                const queryParams = parameters.filter( param => \n                    param.paramValue !== '' \n                ).map( param => \n                    param.paramName + '=' + param.paramValue\n                ).join(\"&\");\n                // console.log({queryParams}); // son los que no estan vacios\n            \n                if ( queryParams !== '') {\n                    url += `&${queryParams}`;                               \n                }\n    \n                console.log({url});\n                \n            }\n            \n\n            // TODO: encodeURI(url)  \n            const resp = await fetch(url);\n            const data = await resp.json();\n            //console.log({busqueda});\n            //console.log({data});\n     \n            setMovies({\n                movies: data.results,\n                loading: false\n            });  \n             \n\n            // Guardar el total de paginas\n            guardarTotalPaginas(data.total_pages);\n\n            // Guardar el total de resultados\n            guardarTotalResultados(data.total_results);\n\n            // TODO: hacer scroll al principio de la búsqueda al cambiar de página\n\n        }\n        consultarApi();\n    }, [busqueda, paginaactual]);\n\n\n    // Paginacion\n    const handlePagination = (e, value) => {\n        guardarPaginaActual(value);\n    };\n\n    \n\n    const classes = useStyles();\n\n\n    return (\n        <>\n\n        { titulo && \n            <Typography variant=\"h3\" color=\"textPrimary\" component=\"h3\">\n                Resultados para:&nbsp;\n                <Typography variant=\"h3\" color=\"secondary\" component=\"span\">\n                    {titulo}\n                </Typography>\n            </Typography>\n        }\n\n        { movies.loading &&\n            <LinearProgress color=\"secondary\" />\n        }\n\n        { movies.movies.length > 0 ?\n            <>\n                <Container maxWidth=\"xl\" className={classes.total}>\n                    <Typography variant=\"h6\" color=\"primary\" component=\"h6\">\n                        {totalresultados} películas encontradas\n                    </Typography>\n                </Container>\n\n                <PaginationUi\n                    totalpaginas={totalpaginas}\n                    paginaactual={paginaactual}\n                    handlePagination={handlePagination}\n                />\n\n                <Grid container spacing={3}>\n                    {\n                        movies.movies.map( movie => (\n                            <Grid item xs={4} sm={3} xl={2} key={movie.id}>\n                            <MovieGridItem\n                                key={movie.id}\n                                {...movie}\n                            />\n                            </Grid>\n                        ))\n                    }\n                </Grid>\n                \n                <PaginationUi\n                    totalpaginas={totalpaginas}\n                    paginaactual={paginaactual}\n                    handlePagination={handlePagination}\n                />\n            </>\n        :\n            null\n        }\n\n        {!movies.loading && movies.movies.length < 1 &&\n            <Container maxWidth=\"md\" className={classes.total}>\n                <Alert severity=\"warning\">No se encontraron resultados</Alert>\n            </Container>\n        }\n  \n        </>\n    )\n}\n\nexport default MovieGrid;\n\n","export default __webpack_public_path__ + \"static/media/tmdb_logo_blue_square_2.e51fc2a7.svg\";","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\n\nimport tmdb_logo from '../../img/tmdb_logo_blue_square_2.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center',\n    fontSize: '3rem'\n  },\n  logo: {\n    maxWidth: '5rem',\n  }\n}));\n\n\nconst Menu = ({theme, setTheme}) => {\n\n    const classes = useStyles();\n\n    const handleChange = (event) => {\n\t\tsetTheme(event.target.checked);\n\t    //TODO: guardar si es menu dark o light en el localstorage\n    };\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n            <img src={tmdb_logo} alt={tmdb_logo} className={classes.logo}/> \n            <Typography variant=\"h2\" className={classes.title}>\n                Movies App\n            </Typography>\n            <FormGroup>\n                <FormControlLabel\n                    control={\n                    <Switch checked={theme} onChange={handleChange} aria-label=\"login switch\" />\n                    }\n                    label={theme ? 'Dark mode' : 'Light mode'}\n                />\n            </FormGroup>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Menu\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\n//import StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport Typography from '@material-ui/core/Typography';\n\nimport no_img from '../../img/no_img.png';\nimport { useFetch } from '../../hooks/useFetch';\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n      //color: theme.palette.primary.light,\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    rating: {\n        //color: 'pink'\n    },\n    topSlider: {\n        flexWrap:'nowrap',\n        overflow:'hidden'\n    },\n    topTitle: {\n        fontSize: '2rem',\n        margin: '20px 0 10px 0',\n        borderLeft: '5px solid',\n        paddingLeft: '7px'\n    }\n}));\n\n\nexport const TopMovies = ({topUrl, topTitle}) => {\n\n    // Con el hook useFetch\n    const {data} = useFetch(topUrl);\n    const topMovies = data \n                        ? data.results.filter((result) =>  result.backdrop_path ) \n                        : [];\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"h3\" color=\"secondary\" component=\"h3\" className={classes.topTitle}>\n                {topTitle}\n            </Typography>\n            <Grid container spacing={0} className={classes.topSlider}> \n                {(topMovies.length > 0) ?\n                    topMovies.slice(0, 6).map(image => (\n                        <Grid item xs={3} xl={2} key={image.id} >\n                            <GridList className={classes.gridList} cols={1}>\n                            <GridListTile key={image.id} >\n                                <img src={image.backdrop_path ? `https://image.tmdb.org/t/p/w500${image.backdrop_path}` : no_img} alt={image.title} className=\"\"/>\n                                <GridListTileBar\n                                    title={image.title}\n                                    classes={{\n                                        root: classes.titleBar,\n                                        title: classes.title,\n                                    }}\n                                    actionIcon={\n                                        <IconButton aria-label={`star ${image.title}`} color=\"secondary\">\n                                            <StarIcon className={classes.title} color=\"secondary\"/>\n                                            <span className={classes.rating}>{image.vote_average}</span>\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                            </GridList>\n                        </Grid>\n                    ))\n                : null}\n            </Grid>\n        </>\n    )\n    \n\n}\n\n","import React, { useState } from 'react';\n// Material-ui\nimport Container from '@material-ui/core/Container';\n// Es como normalize.css para resetear los estilos por defecto del navegador\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\n\nimport Search from './components/Search';\nimport MovieGrid from './components/MovieGrid';\nimport Menu from './components/ui/Menu';\nimport { TopMovies } from './components/ui/TopMovies';\nimport { API_KEY } from './helpers/constants';\n\nimport './styles.css';\nimport { amber, indigo } from '@material-ui/core/colors';\n\n\nfunction MoviesApp() {\n\n\tconst [filtros, guardarFiltros] = useState({});\n\n\t//TODO: guardar en localstorage\n\tconst [darkState, setDarkState] = useState(true);\n\n\tconst palletType = darkState ? \"dark\" : \"light\";\n\tconst mainPrimaryColor = indigo[500]; //cyan[900]\n\tconst mainSecondaryColor = darkState ? amber[400] : amber[500];\n\tconst textSecondaryColor = darkState ? indigo[300] : indigo[800];\n\n\tconst darkTheme = createMuiTheme({\n\t\tpalette: {\n\t\t\ttype: palletType,\n\t\t\tprimary: {\n\t\t\t\tmain: mainPrimaryColor\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\tmain: mainSecondaryColor\n\t\t\t},\n      text: {\n        secondary: textSecondaryColor\n      }\n\t\t}\n\t});\n\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tsearch: {\n\t\tbackgroundImage: 'linear-gradient(60deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 75%, rgba(0, 0, 0, 0.1) 75%, rgba(0, 0, 0, 0.1)), linear-gradient(120deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 75%, rgba(0, 0, 0, 0.1) 75%, rgba(0, 0, 0, 0.1))',\n\t\t//border: '1px solid rgba(0, 0, 0, 0.1)',\n\t\tboxShadow: '2px 0px 3px 2px rgb(0 0 0 / 10%)'\n\t\t}\n\t}));\n\n\n  \tconst classes = useStyles();\n\n\n    //TODO: Cambiar los parámetros de estas url\n    const urlNew = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${API_KEY}`;\n\n    const urlRating = `https://api.themoviedb.org/3/discover/movie/?certification_country=US&sort_by=vote_average.desc&api_key=${API_KEY}`;\n\n    return (\n    \n        <ThemeProvider theme={darkTheme}>\n            <CssBaseline />\n\n            <Menu\n              theme={darkState}\n              setTheme={setDarkState}\n            />\n\n            <Container maxWidth=\"xl\">\n\t\t\t\t<TopMovies\n\t\t\t\ttopUrl={urlNew}\n\t\t\t\ttopTitle='Top 5 mas populares'\n\t\t\t\t/>\n\n\t\t\t\t<TopMovies\n\t\t\t\ttopUrl={urlRating}\n\t\t\t\ttopTitle='Top 5 mejor valoradas'\n\t\t\t\t/>\n          \t</Container>\n\n          \t<Box margin={'50px auto'} className={classes.search}>\n              \t<Search\n                    guardarFiltros={guardarFiltros}\n                />\n            </Box>\n\n            { Object.keys(filtros).length > 0 ?\n                <Container maxWidth=\"xl\">\n                    <MovieGrid\n                        busqueda={filtros}\n                    />\n                </Container>\n                : null\n            }  \n        </ThemeProvider>\n    );\n}\n\nexport default MoviesApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MoviesApp from './MoviesApp';\n\n\nReactDOM.render(\n    <MoviesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}