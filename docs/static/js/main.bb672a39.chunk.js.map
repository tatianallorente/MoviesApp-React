{"version":3,"sources":["components/ui/Error.js","hooks/useFetch.js","helpers/constants.js","helpers/getPerson.js","components/utils/utils.js","components/Search.js","hooks/useForm.js","components/ui/PaginationUi.js","img/no_img.png","helpers/getRatingsImdb.js","components/ui/MovieModal.js","hooks/useFetchRatings.js","components/MovieGridItem.js","components/MovieGrid.js","img/tmdb_logo_blue_square_2.svg","components/ui/Menu.js","components/ui/TopMovies.js","MoviesApp.js","index.js"],"names":["Error","mensaje","Alert","severity","useFetch","url","isMounted","useRef","useState","data","loading","error","state","setState","useEffect","current","fetch","then","resp","json","catch","API_KEY","getPerson","buscar_people","a","people","results","years","yearCurrent","Date","getFullYear","Array","fill","map","numeros","sortBy","index","value","useStyles","makeStyles","theme","formControl","margin","spacing","flexGrow","selectEmpty","marginTop","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","formulario","buscarFiltros","Search","guardarFiltros","initialState","values","setValues","target","name","useForm","titulo","genero","puntuacion","year","with_cast","orden","formFiltersValues","handleFiltersChange","genres","buscarPeliculas","e","preventDefault","with_castId","trim","autocomplete_cast","document","getElementById","options","length","dataset","classes","Container","maxWidth","onSubmit","className","Typography","variant","color","component","Box","marginBottom","TextField","id","label","onChange","fullWidth","InputProps","startAdornment","InputAdornment","FormControl","InputLabel","shrink","htmlFor","NativeSelect","inputProps","genre","num","sort","Input","list","onKeyUp","innerHTML","cast","Button","onClick","paginacion","alignSelf","PaginationUi","totalpaginas","paginaactual","handlePagination","Pagination","siblingCount","boundaryCount","count","page","getRatingsImdb","imdb_id","url_imdb","encodeURI","Ratings","forEach","r","Source","Transition","React","forwardRef","props","ref","Zoom","root","dialog","backgroundSize","backgroundPosition","backgroundRepeat","tagline","fontStyle","paper","outline","down","dialogFooter","dialogContent","closeButton","right","top","closeIcon","fontSize","generos","flexWrap","listStyle","paddingRight","paddingBottom","ratings","textAlign","castContainer","flexDirection","flexBasis","left","zIndex","MovieModal","movieDetails","movieCast","handleClose","open","title","original_title","original_language","backdrop_path","poster_path","overview","vote_average","vote_count","release_date","runtime","background_url","img_url","useFetchRatings","setLoading","setTimeout","matches","useMediaQuery","CircularProgress","Dialog","onClose","aria-labelledby","style","backgroundImage","TransitionComponent","PaperProps","boxShadow","BackdropProps","DialogContent","src","no_img","alt","IconButton","aria-label","Object","keys","mins","hours","Math","floor","minutes","convertMinsToTime","Chip","Value","slice","profile_path","character","media","paddingTop","cardContent","cardTitle","cardAverage","borderBottomLeftRadius","modal","contenido","MovieGridItem","movie","setOpen","setDetailedMovie","setCastMovie","url_actores","jsonMovie","response","jsonCast","filter","result","consultarApi","Card","CardMedia","image","CardContent","lineHeight","CardActions","size","cargando","border","total","h3","MovieGrid","busqueda","movies","setMovies","guardarPaginaActual","guardarTotalPaginas","totalresultados","guardarTotalResultados","parameters","paramName","paramValue","queryParams","param","join","console","log","total_pages","total_results","LinearProgress","Grid","container","item","xs","sm","xl","menuButton","logo","Menu","setTheme","existingPreference","switchState","setSwitchState","AppBar","Toolbar","tmdb_logo","FormGroup","FormControlLabel","control","Switch","checked","localStorage","setItem","titleBar","background","rating","topSlider","overflow","topTitle","borderLeft","paddingLeft","gridList","cursor","opacity","TopMovies","topUrl","topMovies","activeMovie","setActiveMovie","GridList","cols","handleOpen","GridListTile","GridListTileBar","actionIcon","MoviesApp","filtros","getItem","darkState","setDarkState","palletType","mainPrimaryColor","indigo","mainSecondaryColor","amber","textSecondaryColor","darkTheme","createMuiTheme","type","primary","main","secondary","text","typography","h2","fontFamily","h4","h6","footer","urlNew","urlRating","ThemeProvider","CssBaseline","href","rel","ReactDOM","render"],"mappings":"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","file":"static/js/main.bb672a39.chunk.js","sourcesContent":["import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\n\nconst Error = ({mensaje}) => {\n    return ( \n         \n        <Alert severity=\"error\">{mensaje}</Alert>\n     );\n}\n \nexport default Error;","import { useState, useEffect, useRef } from 'react';\n\n\nexport const useFetch = ( url ) => {\n    \n    const isMounted = useRef(true);\n    const [state, setState] = useState({ data: null, loading: true, error: null });\n\n    useEffect( () => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n\n    useEffect( () => {\n\n        setState({ data: null, loading: true, error: null });\n\n        fetch( url )\n            .then( resp => resp.json() )\n            .then( data => {\n\n                if ( isMounted.current ) {\n                    setState({\n                        loading: false,\n                        error: null,\n                        data\n                    });\n                }\n\n            })\n            .catch( () => {\n                setState({\n                    data: null,\n                    loading: false,\n                    error: 'No se pudo cargar la info'\n                })\n            })\n\n    },[url])\n\n    return state;\n}\n","export const API_KEY = '0799b15d3091f6948d82b2274f8e5226';","import { API_KEY } from './constants';\n\n\nexport const getPerson = async(buscar_people) => {\n\n    const url = `https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&query=${buscar_people}`;\n\n    const resp = await fetch(url);\n    const data = await resp.json();\n\n    const people = data.results;\n\n    return people;\n}\n\n/*\n    Algunos actores salen duplicados, es porque vienen asi de la api, con diferentes ids, y no puedo buscar varios ids a la vez porque tendrian que ser actores que trabajaran juntos en las mismas peliculas\n*/","\n// Array de años\nexport const years = () => {  \n    let yearCurrent = new Date().getFullYear(); \n    let yearStart = 1940;\n\n    return Array(yearCurrent - yearStart)\n        .fill()\n        .map(() => yearCurrent--);\n}\n\n// Array de puntuacion\nexport const numeros = [1,2,3,4,5,6,7,8,9];\n\n\n// Default: popularity.desc\nexport const sortBy =  \n    [\n        {index: 'Popularidad DESC', value: 'popularity.desc'},\n        {index: 'Popularidad ASC', value: 'popularity.asc'},\n        {index: 'Fecha de estreno DESC', value: 'primary_release_date.desc'},\n        {index: 'Fecha de estreno ASC', value: 'primary_release_date.asc'},\n        {index: 'Título original DESC', value: 'original_title.desc'},\n        {index: 'Título original ASC', value: 'original_title.asc'},\n        {index: 'Puntuación DESC', value: 'vote_average.desc'},\n        {index: 'Puntuación ASC', value: 'vote_average.asc'}\n    ];\n\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Error from './ui/Error';\nimport { useForm } from '../hooks/useForm';\nimport { useFetch } from '../hooks/useFetch';\nimport { API_KEY } from '../helpers/constants';\nimport { getPerson } from '../helpers/getPerson';\nimport {numeros, years, sortBy} from './utils/utils';\n\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Container from '@material-ui/core/Container';\nimport { Input } from '@material-ui/core';\n\n//import Paper from '@material-ui/core/Paper';\n//import Accordion from '@material-ui/core/Accordion';\n//import AccordionSummary from '@material-ui/core/AccordionSummary';\n//import AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    //minWidth: 120,\n    flexGrow: 1\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  formulario: {\n    padding: '25px 0'\n  },\n  buscarFiltros: {\n    display: 'flex', \n    justifyContent: 'space-between', \n    alignItems: 'center'\n  }\n}));\n\n\n\nconst Search = ({guardarFiltros}) => {\n\n    const [error, guardarError] = useState(false);\n\n    // Formulario de filtros\n    const [ formFiltersValues, handleFiltersChange ] = useForm( {\n        titulo: '',\n        genero: '',\n        puntuacion: '',\n        year: '',\n        with_cast: '',\n        orden: 'popularity.desc'\n    } );\n  \n    \n    const { titulo, genero, puntuacion, year, with_cast, orden } = formFiltersValues;\n\n    // Get genres to fill select\n    // Con el hook useFetch\n    const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n    const {data} = useFetch(url);\n    const genres = data ? data.genres : [];\n \n\n    // OnSubmit\n    const buscarPeliculas = e => {\n        e.preventDefault();\n        /*console.log('formFiltersValues');\n        console.log(formFiltersValues);*/\n\n        let with_castId = '';\n\n        if (with_cast.trim() !== '') {\n            const autocomplete_cast = document.getElementById(\"autocomplete-cast\");\n            // ver si ese [0] esta correcto\n            if ( autocomplete_cast.options.length > 0 ) {\n                with_castId = autocomplete_cast.options[0].dataset.value;\n            } else {\n                with_castId = with_cast;\n            }\n        }\n\n        // esta función sería la que hace la llamada a la api\n        guardarFiltros({\n            ...formFiltersValues,\n            with_cast: with_castId\n        });\n    }\n\n      \n    // Autocompletado\n    const handleKeyUp = (e) => {\n        //console.log(e);\n        const buscar_people = e.target.value;\n        // Cuando haya mas de 3 letras, autocompletar\n        if (buscar_people.length > 2) {\n            \n            // Llenar autocompletado aquí con people\n            // tengo un datalist con id: autocomplete-cast\n            let autocomplete_cast = document.getElementById(\"autocomplete-cast\");\n            autocomplete_cast.innerHTML = '';\n\n            // llamar api get actores\n            getPerson(buscar_people)\n                .then((people) => {\n                   people.map(cast => (\n                        autocomplete_cast.innerHTML += `<option data-value=${cast.id}>\n                            ${cast.name}\n                        </option>`\n                    ))\n                });\n  \n            // OJO, a veces vienen duplicados\n            //(5) [\"Emma Stone\", \"Emma Stone\", \"Emma Stone\", \"Emma Stone\", \"Emma Stoneberg\"]\n        } \n    };\n\n\n    const classes = useStyles();\n\n   \n    return (\n        <Container maxWidth=\"md\">\n        <form onSubmit={buscarPeliculas} className={classes.formulario}>\n           <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">\n           Buscar por título\n            </Typography>\n            <Box marginBottom={'20px'}>\n                <TextField \n                    id=\"standard-basic\"\n                    name=\"titulo\" \n                    label=\"Buscar por titulo\"\n                    color=\"secondary\"\n                    onChange={handleFiltersChange}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <SearchIcon />\n                          </InputAdornment>\n                        ),\n                      }}\n                />\n            </Box>\n            \n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">\n                Buscar por filtros\n            </Typography>\n                <Box className={classes.buscarFiltros}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"genre-native-label-placeholder\" color=\"secondary\">\n                            Género\n                        </InputLabel>\n                        <NativeSelect\n                            value={genero}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'genero',\n                                id: 'genre-native-label-placeholder'\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {genres.map(genre => (\n                                <option \n                                    key={genre.id} \n                                    value={genre.id} \n                                >{genre.name}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"puntuacion-native-label-placeholder\" color=\"secondary\">\n                            Puntuación\n                        </InputLabel>\n                        <NativeSelect\n                            value={puntuacion}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'puntuacion',\n                                id: 'puntuacion-native-label-placeholder',\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {numeros.map(num => (\n                                <option \n                                    key={num} \n                                    value={num} \n                                >+{num}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"year-native-label-placeholder\" color=\"secondary\">\n                            Año\n                        </InputLabel>\n                        <NativeSelect\n                            value={year}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'year',\n                                id: 'year-native-label-placeholder',\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {years().map(year => (\n                                <option \n                                    key={year} \n                                    value={year} \n                                >{year}</option>\n                            ))\n                            }\n                            \n                            <option value=\"1940\">1940</option>\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"orden-native-label-placeholder\" color=\"secondary\">\n                            Orden\n                        </InputLabel>\n                        <NativeSelect\n                            value={orden}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'orden',\n                                id: 'orden-native-label-placeholder',\n                            }}\n                        >\n                            {sortBy.map(sort => (\n                                <option \n                                    key={sort.value} \n                                    value={sort.value} \n                                >{sort.index}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"with_cast\" color=\"secondary\">\n                            Actor/Actriz\n                        </InputLabel>\n                        <Input \n                            list=\"autocomplete-cast\" \n                            id=\"with_cast\"\n                            name=\"with_cast\"\n                            color=\"secondary\"\n                            onChange={handleFiltersChange}\n                            onKeyUp={handleKeyUp}\n                            inputProps={{\n                                list: \"autocomplete-cast\"\n                            }}\n                        />\n                        <datalist id=\"autocomplete-cast\"></datalist>\n                    </FormControl>\n\n\n                    <Button \n                        variant=\"contained\" \n                        color=\"secondary\"\n                        onClick={buscarPeliculas}\n                    >\n                        Buscar\n                    </Button>\n\n                </Box>\n\n\n\n            {error ? <Error mensaje=\"Debe haber al menos un campo de búsqueda\"/> : null}\n        </form>\n        </Container>\n    )\n}\n\nSearch.propTypes = {\n    guardarFiltros: PropTypes.func.isRequired\n}\n\nexport default Search;\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paginacion: {\n        display: 'flex',\n        marginBottom: '20px',\n        justifyContent: 'center',\n        '& > *': {\n            marginTop: theme.spacing(2)\n        },\n        '& > span': {\n            alignSelf: 'center',\n            marginLeft: '10px'\n        }\n    }\n}));\n\n\nconst PaginationUi = ({totalpaginas, paginaactual, handlePagination}) => {\n\n    const classes = useStyles();\n\n    return ( \n        <Container maxWidth=\"xl\" className={classes.paginacion}>\n            <Pagination \n                variant=\"outlined\" \n                shape=\"rounded\" \n                siblingCount={2} \n                boundaryCount={2} \n                count={totalpaginas} \n                page={paginaactual} \n                onChange={handlePagination}\n            />\n            <Typography \n                variant=\"body2\" \n                color=\"textPrimary\" \n                component=\"span\">\n                    {`${paginaactual} de ${totalpaginas}`}\n            </Typography>\n        </Container>\n     );\n}\n \nexport default PaginationUi;","export default __webpack_public_path__ + \"static/media/no_img.04fe48ca.png\";","export const getRatingsImdb = async(imdb_id) => { \n\n    const url_imdb = `https://www.omdbapi.com/?i=${encodeURI(imdb_id)}&apikey=b7618069`;\n\n    try {\n        const resp = await fetch(url_imdb);\n        const {Ratings} = await resp.json();\n\n            Ratings.forEach((r) => {\n                if (r.Source === 'Internet Movie Database') {\n                    r.Source = 'IMDB'\n                }\n            });\n\n        return Ratings;\n\n    } catch (error) {\n        //console.log(error);\n        return [];\n    }\n\n};\n    /*\n    (3) [{…}, {…}, {…}]\n    0: {Source: \"Internet Movie Database\", Value: \"5.4/10\"}\n    1: {Source: \"Rotten Tomatoes\", Value: \"59%\"}\n    2: {Source: \"Metacritic\", Value: \"60/100\"}\n    */","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Zoom from '@material-ui/core/Zoom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport no_img from '../../img/no_img.png';\nimport { useFetchRatings } from '../../hooks/useFetchRatings';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n    },\n    dialog: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundSize: 'cover', \n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n    },\n    tagline: {\n        color: 'greenyellow',\n        fontStyle: 'italic'\n    },\n    paper: {\n        display: 'flex',\n        color: '#fff',\n        outline: 0,\n        padding: '0px !important',\n        '& img': {\n            maxWidth: '50%'\n        },\n        [theme.breakpoints.down(600)]: {\n            '& img': {\n                display: 'none'\n            },\n        },\n    },\n    dialogFooter: {\n        color: 'white',\n        padding: '24px'\n    },\n    dialogContent : {\n        padding: theme.spacing(2, 4)\n    },\n    closeButton: {\n        position: 'absolute', \n        right: '5px',\n        top: '5px'\n    },\n    closeIcon: {\n        fontSize: 30,\n        color: '#fff'\n    },\n    generos: {\n        marginTop: '1rem',\n        '& > ul': {\n            display: 'flex', \n            flexWrap: 'wrap',\n            listStyle: 'none', \n            padding: '0',\n            '& > li': {\n                paddingRight: '5px',\n                paddingBottom: '5px'\n            } \n        }\n    },\n    ratings: {\n        display:'flex',\n        justifyContent: 'space-evenly',\n        padding: 0,\n        '& > li': {\n            padding: '5px',\n            margin: '5px',\n            listStyle: 'none',\n            textAlign: 'center'        \n        }\n    },\n    castContainer: {\n        padding: '0', \n        display: 'flex', \n        flexWrap: 'wrap',\n        marginTop: '12px'\n    },\n    cast: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: .1,\n        flexBasis: 0, \n        marginRight: theme.spacing(3),\n        '& > img': {\n            maxWidth:'100%'\n        },\n        '& div': {\n            padding: '10px 0',\n            '& span:first-child': {\n                display: 'block'\n            },\n            '& span:last-child': {\n                color: 'grey'\n            },\n        },\n        '&:last-child': {\n            marginRight: 0\n        }\n    },\n    loading: {\n        height: '100%',\n        width: '100vw',    \n        backgroundColor: 'rgba(0, 0, 0, .6)',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        zIndex: 9999\n    }\n}));\n\n\nexport const MovieModal = ({movieDetails, movieCast, handleClose, open}) => {\n\n    const {id, title, original_title, original_language, backdrop_path, poster_path, genres,overview, tagline, vote_average, vote_count, release_date, runtime, imdb_id} = movieDetails;\n\n\n    // imagenes\n    const background_url = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n    const img_url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n\n    // Llamamos a nuestro custom hook useFetchRatings\n    const { ratings } = useFetchRatings(imdb_id);\n\n    /*\n    let url_reviews = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`;\n    */\n\n    const convertMinsToTime = (mins) => {\n        let hours = Math.floor(mins / 60);\n        let minutes = mins % 60;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        return `${hours}h ${minutes}mins`;\n    }\n\n\n    const [ loading, setLoading] = useState(true);\n\n    // Spinner\n    setTimeout(() => {     \n        // Elimina el spinner    \n        setLoading(false);\n    }, 1000);\n\n\n    const matches = useMediaQuery(theme => theme.breakpoints.down(600)); //600px\n\n    const classes = useStyles();\n\n    return (\n        <div>\n\n        { loading ?\n            <div className={`${classes.dialog} ${classes.loading}`}>\n                <CircularProgress color=\"secondary\" />\n            </div>\n        :\n            <Dialog onClose={handleClose} aria-labelledby={title} open={open}\n                className={classes.dialog}\n                style={{\n                    backgroundImage: matches ? `url(${img_url})` : `url(${background_url})`,backgroundColor: 'rgba(39, 77, 171, .3)'\n                }}   \n                maxWidth='lg' \n                TransitionComponent={Transition}\n                PaperProps={{\n                    style: {\n                    backgroundColor: 'rgba(0, 0, 0, .7)',\n                    boxShadow: 'none',\n                    borderRadius: '6px'\n                    },\n                }}\n                BackdropProps={{\n                    style: {\n                        backgroundColor: 'transparent',\n                    },\n                }}\n            >\n                <DialogContent className={classes.paper}>        \n                    <img src={poster_path ? img_url : no_img} alt={title}/>\n                    <div className={classes.dialogContent}>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon className={classes.closeIcon}/>\n                        </IconButton>\n                        <Typography variant=\"h3\" color=\"secondary\" component=\"h2\"\n                            style={{\n                                fontSize: matches ? '2rem' : '2.8rem'\n                            }} \n                        >\n                            {original_language === 'es' ? original_title : title}\n                        </Typography>\n                        {\n                            tagline\n                            ? <Typography variant=\"h5\" component=\"h3\" className={classes.tagline}>{tagline}</Typography>\n                            : null\n                        }\n                        <Typography variant=\"body1\" component=\"p\">{overview}</Typography>\n                        \n                        { Object.keys(movieDetails).length > 0 ?\n                            <>\n                            <div style={{display:'flex', justifyContent: 'space-evenly', alignItems: 'center', marginTop: '1rem'}}>\n                            <div>\n                                <Typography variant=\"body1\" component=\"p\">Fecha de estreno:</Typography>\n                                <Typography variant=\"h6\" component=\"h3\" color=\"secondary\"> {release_date}</Typography>\n                            </div>\n                            { runtime ? \n                                <div><Typography variant=\"body1\" component=\"p\">Duración:</Typography>\n                                <Typography variant=\"h6\" component=\"h3\" color=\"secondary\"> {convertMinsToTime(runtime)}</Typography></div>\n                                : null\n                            }\n                            </div>\n                            {genres && genres.length > 0 ?\n                                <div className={classes.generos}>\n                                    <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Géneros:</Typography>\n                                    <ul>\n                                        {genres.map((genre) => {\n                                            return (\n                                                <li key={genre.id}>\n                                                    <Chip\n                                                        label={genre.name}\n                                                        //color=\"primary\"\n                                                        //className={classes.chip}\n                                                    />\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                                : null\n                            }\n                            <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Puntuación:</Typography>\n                            <ul className={classes.ratings}>\n                            {ratings.length > 0 ?\n                                <>\n                                <li><strong>TMDB:</strong> {vote_average} de {vote_count} votos</li>\n                                {ratings.map((r) => {\n                                    return (\n                                        <li key={r.Source}>\n                                            <strong>{r.Source}:</strong> {r.Value}\n                                        </li>\n                                    )\n                                })}\n                                </>\n                            : <li><strong>TMDB:</strong> {vote_average} de {vote_count} votos</li>\n                            }\n                            </ul>\n                            </>\n                        : null\n                        }\n                        {/* \n                        <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Reviews/criticas:</Typography>\n                        */}\n                    </div>   \n                </DialogContent>\n                { Object.keys(movieDetails).length > 0 && movieCast.length > 0 && !matches ?\n                    <div className={classes.dialogFooter}>\n                        <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Reparto:</Typography>\n                        <Container maxWidth=\"xl\" className={classes.castContainer}>\n                                {movieCast.slice(0, 10).map((cast) => {\n                                    return (\n                                        <div key={cast.id} className={classes.cast}>\n                                            <img src={cast.profile_path ? `https://image.tmdb.org/t/p/w185${cast.profile_path}` : no_img} alt={cast.character}/>\n                                            <div>\n                                                <span>{cast.character}</span>\n                                                <span>{cast.name}</span>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                        </Container>\n                    </div>\n                : null\n                }\n            </Dialog>\n        }\n        </div>\n    )\n}\n","\n\nimport {useState, useEffect} from 'react';\nimport { getRatingsImdb } from '../helpers/getRatingsImdb';\n\n\nexport const useFetchRatings = (imdb_id) => {\n\n    const [state, setState] = useState({\n        ratings: []\n    })\n\n    useEffect( () => {\n        getRatingsImdb(imdb_id) \n            .then( r => {\n                //console.log(r);\n                setState({\n                    ratings: r\n                });\n            })\n    }, [imdb_id]) \n\n    return state;\n}\n\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Box from '@material-ui/core/Box';\n/*\nimport StarIcon from '@material-ui/icons/Star';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { findByLabelText } from '@testing-library/react';\nimport clsx from 'clsx';\n*/\n\nimport no_img from '../img/no_img.png';\nimport { API_KEY } from '../helpers/constants';\n\nimport { MovieModal } from './ui/MovieModal';\nimport { useFetch } from '../hooks/useFetch';\n//import { useFetchRatings } from '../hooks/useFetchRatings';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n        position: 'relative',\n        borderRadius: '6px'\n    },\n    media: {\n        //height: 0,\n        //paddingTop: '56.25%', // 16:9\n       // height: '420px'\n       height:0,\n       paddingTop: '145%'\n    },\n    cardContent: {\n        display: 'flex',\n        alignItems: 'center',\n        //padding: theme.spacing(1)\n    },\n    cardTitle: {\n        flexGrow: 1,\n    },\n    cardAverage: {\n        display: 'flex',\n        position: 'absolute',\n        /*top: '6px',\n        right: '12px',*/\n        top: 0,\n        right: 0,\n        backgroundColor: 'rgba(0,0,0, .4)',\n        padding: '5px 5px 0 5px',\n        borderBottomLeftRadius: '6px',\n  \n        '& > span:last-child': {\n            alignSelf: 'center'\n        }\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundSize: 'cover', \n        backgroundRepeat: 'no-repeat'\n    },\n    paper: {\n        //backgroundColor: theme.palette.background.paper,\n        //border: '2px solid #000',\n        //boxShadow: theme.shadows[5],\n        //padding: theme.spacing(2, 4, 3), // multiplica por 8\n        display: 'flex',\n        color: '#fff',\n        outline: 0,\n        //backgroundColor: 'rgba(0, 0, 0, .5)', \n        padding: '0px !important',\n    },\n    contenido : {\n        padding: theme.spacing(2, 4)\n    },\n    closeButton: {\n        position: 'absolute', \n        right: '5px',\n        top: '5px'\n    },\n    generos: {\n        display: 'flex', \n        listStyle: 'none', \n        padding: '0',\n        '& > li': {\n            paddingRight: '5px'\n        } \n    },\n    castContainer: {\n        \n    },\n    cast: {\n        display: 'flex',\n        flexDirection: 'column', \n        flexGrow: 1, \n        flexBasis: 0, \n        marginRight: theme.spacing(3),\n        '&:last-child': {\n            marginRight: 0\n        }\n    }\n}));\n\n\n\nconst MovieGridItem = (movie) => {\n    /*const [movieDetails, setDetailedMovie] = useState({\n        movie: [],\n        loading: true\n    });*/\n\n    //const [loading, setLoading] = useState([]); \n   // const [movieDetails, setDetailedMovie] = useState({});\n   // const [movieCast, setCastMovie] = useState({});\n    const [open, setOpen] = useState(false);\n\n    const {id, title, original_title, original_language, poster_path, vote_average} = movie;\n\n    // imagenes\n    const img_url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n    const classes = useStyles();\n\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n\n    const [movieDetails, setDetailedMovie] = useState([]);\n    const [movieCast, setCastMovie] = useState([]);\n\n\n    useEffect(() => {  \n        let url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n        let url_actores = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n        \n        const consultarApi = async () => {\n            const resp = await fetch(url);\n            const jsonMovie = await resp.json();\n            setDetailedMovie(jsonMovie);\n            \n            const response = await fetch(url_actores);\n            const jsonCast = await response.json();\n            const cast = jsonCast.cast.filter((result) => result.profile_path );\n            setCastMovie(cast);\n        }\n        consultarApi();\n    }, []);\n\n\n    return (\n        <>\n            <Card className={classes.root}>\n                \n                <CardMedia\n                    className={classes.media}\n                    image={poster_path ? img_url : no_img}\n                    ///title={title}\n                />\n                  \n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\" className={classes.cardTitle}>\n                        {original_language === 'es' ? original_title : title}\n                    </Typography>\n\n                    <Box className={classes.cardAverage}>\n                        <Typography variant=\"body2\" color=\"secondary\" component=\"span\" style={{lineHeight: 'initial'}}>\n                            <StarBorderIcon className={classes.title} style={{ fontSize: '2rem' }}/>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"secondary\" component=\"span\" style={{ fontSize: '1.4rem'}}>\n                            {vote_average}\n                        </Typography>\n                    </Box>\n                </CardContent>\n                <CardActions style={{display: 'flex', justifyContent: 'center'}}>\n                    <Button \n                    style={{width: '100%'}}\n                        size=\"small\" \n                        color=\"primary\" \n                        //variant=\"outlined\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            //detalles(id);\n                            handleOpen();\n                        }}\n                    >\n                        Ver detalles\n                    </Button>\n                </CardActions>\n\n            </Card>\n        \n\n            {/*\n                // Abrir detalles de la pelicula en una ventana modal\n            */}\n            { open ?  \n                <MovieModal\n                    movieDetails={movieDetails}\n                    movieCast={movieCast}\n                    handleClose={handleClose}\n                    open={open}\n                   // ratings={ratings}\n                />\n            : null}\n        </>\n    )\n}\n\nexport default MovieGridItem;\n\n\n\n/*\n               adult: false\n               backdrop_path: \"/srYya1ZlI97Au4jUYAktDe3avyA.jpg\"\n               belongs_to_collection: {id: 468552, name: \"Wonder Woman Collection\", poster_path: \"/8AQRfTuTHeFTddZN4IUAqprN8Od.jpg\", backdrop_path: \"/n9KlvCOBFDmSyw3BgNrkUkxMFva.jpg\"}\n               budget: 200000000\n               genres: (3) [{…}, {…}, {…}]\n               homepage: \"https://www.warnerbros.com/movies/wonder-woman-1984\"\n               id: 464052\n               imdb_id: \"tt7126948\"\n               original_language: \"en\"\n               original_title: \"Wonder Woman 1984\"\n               overview: \"Wonder Woman comes into conflict with the Soviet Union during the Cold War in the 1980s and finds a formidable foe by the name of the Cheetah.\"\n               popularity: 2089.125\n               poster_path: \"/8UlWHLMpgZm9bx6QYh0NFoq67TZ.jpg\"\n               production_companies: (6) [{…}, {…}, {…}, {…}, {…}, {…}]\n               production_countries: [{…}]\n               release_date: \"2020-12-16\"\n               revenue: 159533000\n               runtime: 152\n               spoken_languages: [{…}]\n               status: \"Released\"\n               tagline: \"A new era of wonder begins.\"\n               title: \"Wonder Woman 1984\"\n               video: false\n               vote_average: 6.9\n               vote_count: 3829\n               \n*/\n\n\n","import React, { useEffect, useState } from 'react';\nimport { API_KEY } from '../helpers/constants';\n//import { useFetch } from '../hooks/useFetch';\nimport PaginationUi from './ui/PaginationUi';\nimport MovieGridItem from './MovieGridItem';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n//import CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    cargando: {\n        textAlign: 'center',\n        border: '1px solid red'\n    },\n    total: {\n        textAlign: 'center',\n        marginTop: '10px'\n    },      \n        h3: {\n          fontSize: '400px'\n        }, \n    \n  }));\n\n\nconst MovieGrid = ({busqueda}) => {\n\n    const { titulo, genero, puntuacion, year, with_cast, orden } = busqueda;\n\n    // state de la app\n    const [movies, setMovies] = useState({\n        movies: [],\n        loading: true\n    });\n\n    // Paginacion\n    const [paginaactual, guardarPaginaActual] = useState(1);\n    const [totalpaginas, guardarTotalPaginas] = useState(1);\n    const [totalresultados, guardarTotalResultados] = useState(1);\n\n\n    useEffect(() => {\n        const consultarApi = async () => {\n           \n            let url = '';\n            if (titulo.trim() !== '') {\n                url = `https://api.themoviedb.org/3/search/movie?query=${titulo}&api_key=${API_KEY}&page=${paginaactual}`;\n            } else {\n                const parameters = [\n                    {paramName: 'with_genres', paramValue: genero},\n                    {paramName: 'with_cast', paramValue: with_cast},\n                    {paramName: 'vote_average.gte', paramValue: puntuacion},\n                    {paramName: 'primary_release_year', paramValue: year},\n                    {paramName: 'sort_by', paramValue: orden},\n                ];        \n                \n                url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${paginaactual}`;\n                \n                // TODO: poner un minimo de vote_count para buscar por puntuacion\n\n                const queryParams = parameters.filter( param => \n                    param.paramValue !== '' \n                ).map( param => \n                    param.paramName + '=' + param.paramValue\n                ).join(\"&\");\n                // console.log({queryParams}); // son los que no estan vacios\n            \n                if ( queryParams !== '') {\n                    url += `&${queryParams}`;                               \n                }\n    \n                console.log({url});\n                \n            }\n            \n\n            // TODO: encodeURI(url)  \n            const resp = await fetch(url);\n            const data = await resp.json();\n            //console.log({busqueda});\n            //console.log({data});\n     \n            setMovies({\n                movies: data.results,\n                loading: false\n            });  \n             \n\n            // Guardar el total de paginas\n            guardarTotalPaginas(data.total_pages);\n\n            // Guardar el total de resultados\n            guardarTotalResultados(data.total_results);\n\n            // TODO: hacer scroll al principio de la búsqueda al cambiar de página\n\n        }\n        consultarApi();\n    }, [busqueda, paginaactual]);\n\n\n    // Paginacion\n    const handlePagination = (e, value) => {\n        guardarPaginaActual(value);\n    };\n\n    \n\n    const classes = useStyles();\n\n\n    return (\n        <>\n\n        { titulo && \n            <Typography variant=\"h4\" color=\"textPrimary\" component=\"h3\">\n                Resultados para:&nbsp;\n                <Typography variant=\"h4\" color=\"secondary\" component=\"span\">\n                    {titulo}\n                </Typography>\n            </Typography>\n        }\n\n        { movies.loading &&\n            <LinearProgress color=\"secondary\" />\n        }\n\n        { movies.movies.length > 0 ?\n            <>\n                <Container maxWidth=\"xl\" className={classes.total}>\n                    <Typography variant=\"h6\" color=\"primary\" component=\"h6\">\n                        {totalresultados} películas encontradas\n                    </Typography>\n                </Container>\n\n                <PaginationUi\n                    totalpaginas={totalpaginas}\n                    paginaactual={paginaactual}\n                    handlePagination={handlePagination}\n                />\n\n                <Grid container spacing={3}>\n                    {\n                        movies.movies.map( movie => (\n                            <Grid item xs={4} sm={3} xl={2} key={movie.id}>\n                            <MovieGridItem\n                                key={movie.id}\n                                {...movie}\n                            />\n                            </Grid>\n                        ))\n                    }\n                </Grid>\n                \n                <PaginationUi\n                    totalpaginas={totalpaginas}\n                    paginaactual={paginaactual}\n                    handlePagination={handlePagination}\n                />\n            </>\n        :\n            null\n        }\n\n        {!movies.loading && movies.movies.length < 1 &&\n            <Container maxWidth=\"md\" className={classes.total}>\n                <Alert severity=\"warning\">No se encontraron resultados</Alert>\n            </Container>\n        }\n  \n        </>\n    )\n}\n\nexport default MovieGrid;\n\n","export default __webpack_public_path__ + \"static/media/tmdb_logo_blue_square_2.e51fc2a7.svg\";","import React, {useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\n\nimport tmdb_logo from '../../img/tmdb_logo_blue_square_2.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center',\n    fontSize: '2.5rem'\n  },\n  logo: {\n    maxWidth: '5rem',\n  }\n}));\n\n\nconst Menu = ({theme, setTheme, existingPreference}) => {\n\n    const classes = useStyles();\n\n    const [switchState, setSwitchState] = useState(existingPreference === 'light' ? false : true);\n\n    const handleThemeChange = () => {\n      if (theme === \"dark\") {\n        setSwitchState(false);\n        setTheme(\"light\");\n        localStorage.setItem(\"moviesThemeMode\", \"light\");\n      } else {\n        setSwitchState(true);\n        setTheme(\"dark\");\n        localStorage.setItem(\"moviesThemeMode\", \"dark\");\n      }\n    };\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n            <img src={tmdb_logo} alt={tmdb_logo} className={classes.logo}/> \n            <Typography variant=\"h2\" className={classes.title}>\n                Movies App\n            </Typography>\n            <FormGroup>\n                <FormControlLabel\n                    control={\n                      <Switch checked={switchState} onChange={handleThemeChange} aria-label=\"theme\" />\n                    }\n                    label={switchState ? 'Dark mode' : 'Light mode'}\n                />\n            </FormGroup>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Menu\n","import React, {useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\n//import StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport Typography from '@material-ui/core/Typography';\n\nimport no_img from '../../img/no_img.png';\nimport { useFetch } from '../../hooks/useFetch';\nimport { MovieModal } from './MovieModal';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n      //color: theme.palette.primary.light,\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    rating: {\n        //color: 'pink'\n    },\n    topSlider: {\n        flexWrap:'nowrap',\n        overflow:'hidden'\n    },\n    topTitle: {\n        fontSize: '2rem',\n        margin: '20px 0 10px 0',\n        borderLeft: '5px solid',\n        paddingLeft: '7px'\n    },\n    gridList: {\n        cursor: 'pointer',\n        '&:hover': {\n            opacity: .5\n        }\n    }\n}));\n\n\nexport const TopMovies = ({topUrl, topTitle}) => {\n\n    // Con el hook useFetch\n    const {data} = useFetch(topUrl);\n    const topMovies = data \n                        ? data.results.filter((result) =>  result.backdrop_path ) \n                        : [];\n\n    const [open, setOpen] = useState(false);\n\n    const [activeMovie, setActiveMovie] = useState({});\n\n\n    const handleOpen = (movie) => {\n        // TODO: a partir de los genre_ids, obtener el name de los generos y añadirlo a movie\n        setActiveMovie(movie);\n        setOpen(true);\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"h3\" color=\"secondary\" component=\"h3\" className={classes.topTitle}>\n                {topTitle}\n            </Typography>\n            <Grid container spacing={0} className={classes.topSlider}> \n                {(topMovies.length > 0) ?\n                    topMovies.slice(0, 6).map(movie => (\n                        <Grid item xs={3} xl={2} key={movie.id} >\n                            <GridList \n                                className={classes.gridList} \n                                cols={1}\n                                onClick={() => {\n                                    handleOpen(movie);\n                                }}\n                            >\n                            <GridListTile key={movie.id} >\n                                <img src={movie.backdrop_path ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` : no_img} alt={movie.title} className=\"\"/>\n                                <GridListTileBar\n                                    title={movie.title}\n                                    classes={{\n                                        root: classes.titleBar,\n                                        title: classes.title,\n                                    }}\n                                    actionIcon={\n                                        <IconButton aria-label={`star ${movie.title}`} color=\"secondary\">\n                                            <StarIcon className={classes.title} color=\"secondary\"/>\n                                            <span className={classes.rating}>{movie.vote_average}</span>\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                            </GridList>\n                        </Grid>\n                    ))\n                : null}\n            </Grid>\n\n            { open ?  \n                <MovieModal\n                    movieDetails={activeMovie}\n                    movieCast={{}}\n                    handleClose={handleClose}\n                    open={open}\n                   // ratings={ratings}\n                />\n            : null}\n\n        </>\n    )\n    \n\n}\n\n","import React, { useState } from 'react';\n// Material-ui\nimport Container from '@material-ui/core/Container';\n// Es como normalize.css para resetear los estilos por defecto del navegador\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\n\nimport Search from './components/Search';\nimport MovieGrid from './components/MovieGrid';\nimport Menu from './components/ui/Menu';\nimport { TopMovies } from './components/ui/TopMovies';\nimport { API_KEY } from './helpers/constants';\n\nimport './styles.css';\nimport { amber, indigo } from '@material-ui/core/colors';\n\n\nfunction MoviesApp() {\n\n\tconst [filtros, guardarFiltros] = useState({});\n\n\tconst existingPreference = localStorage.getItem(\"moviesThemeMode\"); \n\tconst initialState = existingPreference === 'light' ? 'light' : 'dark';\n\tconst [darkState, setDarkState] = useState(initialState);  \n\n\tconst palletType = darkState === \"dark\" ? \"dark\" : \"light\";\n\tconst mainPrimaryColor = indigo[500]; //cyan[900]\n\tconst mainSecondaryColor = darkState ? amber[400] : amber[500];\n\tconst textSecondaryColor = darkState ? indigo[300] : indigo[800];\n\n\tconst darkTheme = createMuiTheme({\n\t\tpalette: {\n\t\t\ttype: palletType,\n\t\t\tprimary: {\n\t\t\t\tmain: mainPrimaryColor\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\tmain: mainSecondaryColor\n\t\t\t},\n\t\t\ttext: {\n\t\t\t\tsecondary: textSecondaryColor\n\t\t\t}\n\t\t},\n\t\ttypography: {  \n\t\t\th2: {\n\t\t\t  \tfontFamily: 'Merienda'\n\t\t\t},       \n\t\t\th3: {\n\t\t\t  \tfontFamily: 'Merienda'\n\t\t\t},  \n\t\t\th4: {\n\t\t\t\tfontFamily: 'Merienda'\n\t\t\t}, \n\t\t\th6: {\n\t\t\t  fontFamily: 'Merienda'\n\t\t\t},\n\t\t},\n\t});\n\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tsearch: {\n\t\tbackgroundImage: 'linear-gradient(60deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 75%, rgba(0, 0, 0, 0.1) 75%, rgba(0, 0, 0, 0.1)), linear-gradient(120deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 75%, rgba(0, 0, 0, 0.1) 75%, rgba(0, 0, 0, 0.1))',\n\t\t//border: '1px solid rgba(0, 0, 0, 0.1)',\n\t\tboxShadow: '2px 0px 3px 2px rgb(0 0 0 / 10%)'\n\t\t},\n\t\tfooter: {\n\t\t  color: '#aaa',\n\t\t  margin: '2rem auto',\n\t\t  textAlign: 'center',\n\t\t  width: '70%',\n\t\t  '& a': {\n\t\t\t  color: textSecondaryColor\n\t\t  }\n\t\t}\n\t}));\n\n\n  \tconst classes = useStyles();\n\n\n    const urlNew = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${API_KEY}`;\n\n\tconst urlRating = `https://api.themoviedb.org/3/discover/movie?certification_country=US&certification=R&sort_by=vote_average.desc&vote_count.gte=18000&api_key=${API_KEY}`;\n\n    return (\n    \n        <ThemeProvider theme={darkTheme}>\n            <CssBaseline />\n\n            <Menu\n              theme={darkState}\n              setTheme={setDarkState}\n              existingPreference={existingPreference}\n            />\n\n            <Container maxWidth=\"xl\">\n\t\t\t\t<TopMovies\n\t\t\t\ttopUrl={urlNew}\n\t\t\t\ttopTitle='Top más populares'\n\t\t\t\t/>\n\n\t\t\t\t<TopMovies\n\t\t\t\ttopUrl={urlRating}\n\t\t\t\ttopTitle='Top mejor valoradas'\n\t\t\t\t/>\n          \t</Container>\n\n          \t<Box margin={'50px auto'} className={classes.search}>\n              \t<Search\n                    guardarFiltros={guardarFiltros}\n                />\n            </Box>\n\n            { Object.keys(filtros).length > 0 ?\n                <Container maxWidth=\"xl\">\n                    <MovieGrid\n                        busqueda={filtros}\n                    />\n                </Container>\n                : null\n            }  \n\n\t\t\t<footer className={classes.footer}>&copy; Designed and developed by&nbsp;\n            \t<a href=\"https://github.com/tatianallorente/MoviesApp-React\" target=\"_blank\" rel=\"noreferrer\" >Tatiana Llorente</a>\n            </footer>\n\n        </ThemeProvider>\n    );\n}\n\nexport default MoviesApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MoviesApp from './MoviesApp';\n\n\nReactDOM.render(\n    <MoviesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}