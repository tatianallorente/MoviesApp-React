{"version":3,"sources":["hooks/useFetch.js","helpers/constants.js","components/services/getPerson.js","components/utils/utils.js","components/Search.js","hooks/useForm.js","components/ui/PaginationUi.js","img/no_img.png","components/services/getRatingsImdb.js","components/ui/MovieModal.js","hooks/useFetchRatings.js","components/services/getDetailedMovie.js","components/services/getCastMovie.js","components/MovieGridItem.js","components/services/getSearchResults.js","components/MovieGrid.js","img/tmdb_logo_blue_square_2.svg","components/ui/Menu.js","components/ui/TopMovies.js","MoviesApp.js","index.js"],"names":["useFetch","url","isMounted","useRef","useState","data","loading","error","state","setState","useEffect","current","fetch","then","resp","json","catch","API_KEY","getPerson","searchCast","a","results","years","yearCurrent","Date","getFullYear","Array","fill","map","ratingNumbers","sortBy","index","value","useStyles","makeStyles","theme","formControl","margin","spacing","flexGrow","searchForm","padding","searchByFilters","display","justifyContent","alignItems","Search","setFilters","initialState","values","setValues","target","name","useForm","title","genero","puntuacion","year","with_cast","orderBy","formFiltersValues","handleFiltersChange","genres","searchMovies","e","preventDefault","with_castId","trim","autocomplete_cast","document","getElementById","options","length","dataset","classes","Container","maxWidth","onSubmit","className","Typography","variant","color","component","Box","marginBottom","TextField","id","label","onChange","fullWidth","InputProps","startAdornment","InputAdornment","position","FormControl","InputLabel","shrink","htmlFor","NativeSelect","inputProps","genre","num","sort","Input","list","onKeyUp","innerHTML","people","cast","Button","onClick","pagination","marginTop","alignSelf","marginLeft","PaginationUi","totalPages","currentPage","handlePagination","Pagination","shape","siblingCount","boundaryCount","count","page","getRatingsImdb","imdb_id","url_imdb","encodeURI","Ratings","forEach","r","Source","Transition","React","forwardRef","props","ref","Zoom","root","dialog","backgroundSize","backgroundPosition","backgroundRepeat","tagline","fontStyle","paper","outline","breakpoints","down","dialogFooter","dialogContent","closeButton","right","top","closeIcon","fontSize","movieGenres","flexWrap","listStyle","paddingRight","paddingBottom","ratings","textAlign","castContainer","flexDirection","flexBasis","marginRight","wordBreak","height","width","backgroundColor","left","zIndex","MovieModal","movieDetails","movieCast","handleClose","open","original_title","original_language","backdrop_path","poster_path","overview","vote_average","vote_count","release_date","runtime","background_url","img_url","useFetchRatings","setLoading","setTimeout","matches","useMediaQuery","CircularProgress","Dialog","onClose","aria-labelledby","style","backgroundImage","TransitionComponent","PaperProps","boxShadow","borderRadius","BackdropProps","DialogContent","src","no_img","alt","IconButton","aria-label","Object","keys","mins","hours","Math","floor","minutes","convertMinsToTime","Chip","Value","slice","profile_path","character","getDetailedMovie","jsonMovie","getCastMovie","response","jsonCast","filter","result","media","paddingTop","cardContent","cardTitle","cardAverage","borderBottomLeftRadius","MovieGridItem","movie","setDetailedMovie","setCastMovie","setOpen","Card","CardMedia","image","CardContent","lineHeight","CardActions","size","getSearchResults","busqueda","parameters","paramName","paramValue","queryParams","param","join","total","MovieGrid","movies","setMovies","setCurrentPage","setTotalPages","totalResults","setTotalResults","total_pages","total_results","LinearProgress","Grid","container","item","xs","sm","xl","Alert","severity","menuButton","logo","Menu","setTheme","existingPreference","switchState","setSwitchState","AppBar","Toolbar","tmdb_logo","FormGroup","FormControlLabel","control","Switch","checked","localStorage","setItem","titleBar","background","rating","topSlider","overflow","topTitle","borderLeft","paddingLeft","gridList","cursor","opacity","TopMovies","topUrl","topMovies","activeMovie","setActiveMovie","GridList","cols","handleOpen","GridListTile","GridListTileBar","actionIcon","MoviesApp","filters","getItem","darkState","setDarkState","palletType","mainPrimaryColor","indigo","mainSecondaryColor","amber","textSecondaryColor","darkTheme","createMuiTheme","palette","type","primary","main","secondary","text","typography","h2","fontFamily","h3","h4","h6","search","footer","urlNew","urlRating","ThemeProvider","CssBaseline","href","rel","ReactDOM","render"],"mappings":"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","file":"static/js/main.e52e0ce8.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\n\nexport const useFetch = ( url ) => {\n    \n    const isMounted = useRef(true);\n    const [state, setState] = useState({ data: null, loading: true, error: null });\n\n    useEffect( () => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n\n    useEffect( () => {\n\n        setState({ data: null, loading: true, error: null });\n\n        fetch( url )\n            .then( resp => resp.json() )\n            .then( data => {\n\n                if ( isMounted.current ) {\n                    setState({\n                        loading: false,\n                        error: null,\n                        data\n                    });\n                }\n\n            })\n            .catch( () => {\n                setState({\n                    data: null,\n                    loading: false,\n                    error: 'No se pudo cargar la info'\n                })\n            })\n\n    },[url])\n\n    return state;\n}\n","export const API_KEY = '0799b15d3091f6948d82b2274f8e5226';","import { API_KEY } from \"../../helpers/constants\";\n\nexport const getPerson = async(searchCast) => {\n\n    const url = `https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&query=${searchCast}`;\n\n    const resp = await fetch(url);\n    const data = await resp.json();\n\n    return data.results;\n}\n\n/*\n    Algunos actores salen duplicados, es porque vienen asi de la api, con diferentes ids, y no puedo buscar varios ids a la vez porque tendrian que ser actores que trabajaran juntos en las mismas peliculas\n*/","// Array de años\nexport const years = () => {  \n    let yearCurrent = new Date().getFullYear(); \n    let yearStart = 1940;\n\n    return Array(yearCurrent - yearStart)\n        .fill()\n        .map(() => yearCurrent--);\n}\n\n// Array de puntuación\nexport const ratingNumbers = [1,2,3,4,5,6,7,8,9];\n\n// Default: popularity.desc\nexport const sortBy =  \n    [\n        {index: 'Popularidad DESC', value: 'popularity.desc'},\n        {index: 'Popularidad ASC', value: 'popularity.asc'},\n        {index: 'Fecha de estreno DESC', value: 'primary_release_date.desc'},\n        {index: 'Fecha de estreno ASC', value: 'primary_release_date.asc'},\n        {index: 'Título original DESC', value: 'original_title.desc'},\n        {index: 'Título original ASC', value: 'original_title.asc'},\n        {index: 'Puntuación DESC', value: 'vote_average.desc'},\n        {index: 'Puntuación ASC', value: 'vote_average.asc'}\n    ];\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n//import Error from './ui/Error';\nimport { useForm } from '../hooks/useForm';\nimport { useFetch } from '../hooks/useFetch';\nimport { API_KEY } from '../helpers/constants';\nimport { getPerson } from './services/getPerson';\nimport {ratingNumbers, years, sortBy} from './utils/utils';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Container from '@material-ui/core/Container';\nimport { Input } from '@material-ui/core';\n\n//import Paper from '@material-ui/core/Paper';\n//import Accordion from '@material-ui/core/Accordion';\n//import AccordionSummary from '@material-ui/core/AccordionSummary';\n//import AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        flexGrow: 1\n    },\n    searchForm: {\n        padding: '25px 0'\n    },\n    searchByFilters: {\n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center'\n    }\n}));\n\n\nconst Search = ({setFilters}) => {\n\n    //const [error, guardarError] = useState(false);\n\n    // Formulario de filtros\n    const [ formFiltersValues, handleFiltersChange ] = useForm( {\n        title: '',\n        genero: '',\n        puntuacion: '',\n        year: '',\n        with_cast: '',\n        orderBy: 'popularity.desc'\n    } );\n  \n    \n    const { title, genero, puntuacion, year, with_cast, orderBy } = formFiltersValues;\n\n    // Get genres to fill select\n    // Con el hook useFetch\n    const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n    const {data} = useFetch(url);\n    const genres = data ? data.genres : [];\n \n\n    // OnSubmit\n    const searchMovies = e => {\n        e.preventDefault();\n        /*console.log('formFiltersValues');\n        console.log(formFiltersValues);*/\n\n        let with_castId = '';\n\n        if (with_cast.trim() !== '') {\n            const autocomplete_cast = document.getElementById(\"autocomplete-cast\");\n            // ver si ese [0] esta correcto\n            if ( autocomplete_cast.options.length > 0 ) {\n                with_castId = autocomplete_cast.options[0].dataset.value;\n            } else {\n                with_castId = with_cast;\n            }\n        }\n\n        // esta función sería la que hace la llamada a la api\n        setFilters({\n            ...formFiltersValues,\n            with_cast: with_castId\n        });\n    }\n\n      \n    // Autocompletado\n    const handleKeyUp = (e) => {\n        //console.log(e);\n        const searchCast = e.target.value;\n        // Cuando haya más de 3 letras, autocompletar\n        if (searchCast.length > 2) {\n            \n            // Llenar autocompletado aquí con searchCast\n            // tengo un datalist con id: autocomplete-cast\n            let autocomplete_cast = document.getElementById(\"autocomplete-cast\");\n            autocomplete_cast.innerHTML = '';\n\n            // llamar api get actores\n            getPerson(searchCast)\n                .then((people) => {\n                   people.map(cast => (\n                        autocomplete_cast.innerHTML += `<option data-value=${cast.id}>\n                            ${cast.name}\n                        </option>`\n                    ))\n                });\n  \n            // Nota: a veces vienen duplicados\n            //(5) [\"Emma Stone\", \"Emma Stone\", \"Emma Stone\", \"Emma Stone\", \"Emma Stoneberg\"]\n        } \n    };\n\n\n    const classes = useStyles();\n\n   \n    return (\n        <Container maxWidth=\"md\">\n        <form onSubmit={searchMovies} className={classes.searchForm}>\n           <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">\n           Buscar por título\n            </Typography>\n            <Box marginBottom={'20px'}>\n                <TextField \n                    id=\"standard-basic\"\n                    name=\"title\" \n                    label=\"Buscar por titulo\"\n                    color=\"secondary\"\n                    onChange={handleFiltersChange}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <SearchIcon />\n                          </InputAdornment>\n                        ),\n                      }}\n                />\n            </Box>\n            \n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">\n                Buscar por filtros\n            </Typography>\n                <Box className={classes.searchByFilters}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"genre-native-label-placeholder\" color=\"secondary\">\n                            Género\n                        </InputLabel>\n                        <NativeSelect\n                            value={genero}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'genero',\n                                id: 'genre-native-label-placeholder'\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {genres.map(genre => (\n                                <option \n                                    key={genre.id} \n                                    value={genre.id} \n                                >{genre.name}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"puntuacion-native-label-placeholder\" color=\"secondary\">\n                            Puntuación\n                        </InputLabel>\n                        <NativeSelect\n                            value={puntuacion}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'puntuacion',\n                                id: 'puntuacion-native-label-placeholder',\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {ratingNumbers.map(num => (\n                                <option \n                                    key={num} \n                                    value={num} \n                                >+{num}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"year-native-label-placeholder\" color=\"secondary\">\n                            Año\n                        </InputLabel>\n                        <NativeSelect\n                            value={year}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'year',\n                                id: 'year-native-label-placeholder',\n                            }}\n                        >\n                            <option value=\"\">-Cualquiera-</option>\n                            {years().map(year => (\n                                <option \n                                    key={year} \n                                    value={year} \n                                >{year}</option>\n                            ))\n                            }\n                            \n                            <option value=\"1940\">1940</option>\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"orderBy-native-label-placeholder\" color=\"secondary\">\n                            Orden\n                        </InputLabel>\n                        <NativeSelect\n                            value={orderBy}\n                            onChange={handleFiltersChange}\n                            color=\"secondary\"\n                            inputProps={{\n                                name: 'orderBy',\n                                id: 'orderBy-native-label-placeholder',\n                            }}\n                        >\n                            {sortBy.map(sort => (\n                                <option \n                                    key={sort.value} \n                                    value={sort.value} \n                                >{sort.index}</option>\n                            ))}\n                        </NativeSelect>\n                    </FormControl>\n\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink htmlFor=\"with_cast\" color=\"secondary\">\n                            Actor/Actriz\n                        </InputLabel>\n                        <Input \n                            list=\"autocomplete-cast\" \n                            id=\"with_cast\"\n                            name=\"with_cast\"\n                            color=\"secondary\"\n                            onChange={handleFiltersChange}\n                            onKeyUp={handleKeyUp}\n                            inputProps={{\n                                list: \"autocomplete-cast\"\n                            }}\n                        />\n                        <datalist id=\"autocomplete-cast\"></datalist>\n                    </FormControl>\n\n\n                    <Button \n                        variant=\"contained\" \n                        color=\"secondary\"\n                        onClick={searchMovies}\n                    >\n                        Buscar\n                    </Button>\n\n                </Box>\n\n\n\n            {/*error ? <Error mensaje=\"Debe haber al menos un campo de búsqueda\"/> : null*/}\n        </form>\n        </Container>\n    )\n}\n\nSearch.propTypes = {\n    setFilters: PropTypes.func.isRequired\n}\n\nexport default Search;\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n    pagination: {\n        display: 'flex',\n        marginBottom: '20px',\n        justifyContent: 'center',\n        '& > *': {\n            marginTop: theme.spacing(2)\n        },\n        '& > span': {\n            alignSelf: 'center',\n            marginLeft: '10px'\n        }\n    }\n}));\n\n\nconst PaginationUi = ({totalPages, currentPage, handlePagination}) => {\n\n    const classes = useStyles();\n\n    return ( \n        <Container maxWidth=\"xl\" className={classes.pagination}>\n            <Pagination \n                variant=\"outlined\" \n                shape=\"rounded\" \n                siblingCount={2} \n                boundaryCount={2} \n                count={totalPages} \n                page={currentPage} \n                onChange={handlePagination}\n            />\n            <Typography \n                variant=\"body2\" \n                color=\"textPrimary\" \n                component=\"span\">\n                    {`${currentPage} de ${totalPages}`}\n            </Typography>\n        </Container>\n     );\n}\n \nexport default PaginationUi;","export default __webpack_public_path__ + \"static/media/no_img.04fe48ca.png\";","export const getRatingsImdb = async(imdb_id) => { \n\n    const url_imdb = `https://www.omdbapi.com/?i=${encodeURI(imdb_id)}&apikey=b7618069`;\n\n    try {\n        const resp = await fetch(url_imdb);\n        const {Ratings} = await resp.json();\n\n            Ratings.forEach((r) => {\n                if (r.Source === 'Internet Movie Database') {\n                    r.Source = 'IMDB'\n                }\n            });\n\n        return Ratings;\n\n    } catch (error) {\n        //console.log(error);\n        return [];\n    }\n\n};\n    /*\n    (3) [{…}, {…}, {…}]\n    0: {Source: \"Internet Movie Database\", Value: \"5.4/10\"}\n    1: {Source: \"Rotten Tomatoes\", Value: \"59%\"}\n    2: {Source: \"Metacritic\", Value: \"60/100\"}\n    */","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Zoom from '@material-ui/core/Zoom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport no_img from '../../img/no_img.png';\nimport { useFetchRatings } from '../../hooks/useFetchRatings';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n    },\n    dialog: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundSize: 'cover', \n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n    },\n    tagline: {\n        color: 'greenyellow',\n        fontStyle: 'italic'\n    },\n    paper: {\n        display: 'flex',\n        color: '#fff',\n        outline: 0,\n        padding: '0px !important',\n        '& img': {\n            maxWidth: '50%'\n        },\n        [theme.breakpoints.down(600)]: {\n            '& img': {\n                display: 'none'\n            },\n        },\n    },\n    dialogFooter: {\n        color: 'white',\n        padding: '24px'\n    },\n    dialogContent : {\n        padding: theme.spacing(2, 4)\n    },\n    closeButton: {\n        position: 'absolute', \n        right: '5px',\n        top: '5px'\n    },\n    closeIcon: {\n        fontSize: 30,\n        color: '#fff'\n    },\n    movieGenres: {\n        marginTop: '1rem',\n        '& > ul': {\n            display: 'flex', \n            flexWrap: 'wrap',\n            listStyle: 'none', \n            padding: '0',\n            '& > li': {\n                paddingRight: '5px',\n                paddingBottom: '5px'\n            } \n        }\n    },\n    ratings: {\n        display:'flex',\n        justifyContent: 'space-evenly',\n        padding: 0,\n        '& > li': {\n            padding: '5px',\n            margin: '5px',\n            listStyle: 'none',\n            textAlign: 'center'        \n        }\n    },\n    castContainer: {\n        padding: '0', \n        display: 'flex', \n        flexWrap: 'wrap',\n        marginTop: '12px'\n    },\n    cast: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: .1,\n        flexBasis: 0, \n        marginRight: theme.spacing(3),\n        '& > img': {\n            maxWidth:'100%'\n        },\n        '& div': {\n            padding: '10px 0',\n            wordBreak: 'break-word',\n            '& span:first-child': {\n                display: 'block'\n            },\n            '& span:last-child': {\n                color: 'grey'\n            },\n        },\n        '&:last-child': {\n            marginRight: 0\n        }\n    },\n    loading: {\n        height: '100%',\n        width: '100vw',    \n        backgroundColor: 'rgba(0, 0, 0, .6)',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        zIndex: 9999\n    }\n}));\n\n\nexport const MovieModal = ({movieDetails, movieCast, handleClose, open}) => {\n\n    const {id, title, original_title, original_language, backdrop_path, poster_path, genres,overview, tagline, vote_average, vote_count, release_date, runtime, imdb_id} = movieDetails;\n\n\n    // imagenes\n    const background_url = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n    const img_url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n\n    // Llamamos a nuestro custom hook useFetchRatings\n    const { ratings } = useFetchRatings(imdb_id);\n\n    /*\n    let url_reviews = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`;\n    */\n\n    const convertMinsToTime = (mins) => {\n        let hours = Math.floor(mins / 60);\n        let minutes = mins % 60;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        return `${hours}h ${minutes}mins`;\n    }\n\n\n    const [ loading, setLoading] = useState(true);\n\n    // Spinner\n    setTimeout(() => {     \n        // Elimina el spinner    \n        setLoading(false);\n    }, 1000);\n\n\n    const matches = useMediaQuery(theme => theme.breakpoints.down(600)); //600px\n\n    const classes = useStyles();\n\n    return (\n        <div>\n\n        { loading ?\n            <div className={`${classes.dialog} ${classes.loading}`}>\n                <CircularProgress color=\"secondary\" />\n            </div>\n        :\n            <Dialog onClose={handleClose} aria-labelledby={title} open={open}\n                className={classes.dialog}\n                style={{\n                    backgroundImage: matches ? `url(${img_url})` : `url(${background_url})`,backgroundColor: 'rgba(39, 77, 171, .3)'\n                }}   \n                maxWidth='lg' \n                TransitionComponent={Transition}\n                PaperProps={{\n                    style: {\n                    backgroundColor: 'rgba(0, 0, 0, .7)',\n                    boxShadow: 'none',\n                    borderRadius: '6px'\n                    },\n                }}\n                BackdropProps={{\n                    style: {\n                        backgroundColor: 'transparent',\n                    },\n                }}\n            >\n                <DialogContent className={classes.paper}>        \n                    <img src={poster_path ? img_url : no_img} alt={title}/>\n                    <div className={classes.dialogContent}>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon className={classes.closeIcon}/>\n                        </IconButton>\n                        <Typography variant=\"h3\" color=\"secondary\" component=\"h2\"\n                            style={{\n                                fontSize: matches ? '2rem' : '2.8rem'\n                            }} \n                        >\n                            {original_language === 'es' ? original_title : title}\n                        </Typography>\n                        {\n                            tagline\n                            ? <Typography variant=\"h5\" component=\"h3\" className={classes.tagline}>{tagline}</Typography>\n                            : null\n                        }\n                        <Typography variant=\"body1\" component=\"p\">{overview}</Typography>\n                        \n                        { Object.keys(movieDetails).length > 0 ?\n                            <>\n                            <div style={{display:'flex', justifyContent: 'space-evenly', alignItems: 'center', marginTop: '1rem'}}>\n                            <div>\n                                <Typography variant=\"body1\" component=\"p\">Fecha de estreno:</Typography>\n                                <Typography variant=\"h6\" component=\"h3\" color=\"secondary\"> {release_date}</Typography>\n                            </div>\n                            { runtime ? \n                                <div><Typography variant=\"body1\" component=\"p\">Duración:</Typography>\n                                <Typography variant=\"h6\" component=\"h3\" color=\"secondary\"> {convertMinsToTime(runtime)}</Typography></div>\n                                : null\n                            }\n                            </div>\n                            {genres && genres.length > 0 ?\n                                <div className={classes.movieGenres}>\n                                    <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Géneros:</Typography>\n                                    <ul>\n                                        {genres.map((genre) => {\n                                            return (\n                                                <li key={genre.id}>\n                                                    <Chip\n                                                        label={genre.name}\n                                                        //color=\"primary\"\n                                                        //className={classes.chip}\n                                                    />\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                                : null\n                            }\n                            <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Puntuación:</Typography>\n                            <ul className={classes.ratings}>\n                            {ratings.length > 0 ?\n                                <>\n                                <li><strong>TMDB:</strong> {vote_average} de {vote_count} votos</li>\n                                {ratings.map((r) => {\n                                    return (\n                                        <li key={r.Source}>\n                                            <strong>{r.Source}:</strong> {r.Value}\n                                        </li>\n                                    )\n                                })}\n                                </>\n                            : <li><strong>TMDB:</strong> {vote_average} de {vote_count} votos</li>\n                            }\n                            </ul>\n                            </>\n                        : null\n                        }\n                        {/* \n                        <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Reviews/criticas:</Typography>\n                        */}\n                    </div>   \n                </DialogContent>\n                { Object.keys(movieDetails).length > 0 && movieCast.length > 0 && !matches ?\n                    <div className={classes.dialogFooter}>\n                        <Typography variant=\"h6\" component=\"h3\" color=\"secondary\">Reparto:</Typography>\n                        <Container maxWidth=\"xl\" className={classes.castContainer}>\n                                {movieCast.slice(0, 10).map((cast) => {\n                                    return (\n                                        <div key={cast.id} className={classes.cast}>\n                                            <img src={cast.profile_path ? `https://image.tmdb.org/t/p/w185${cast.profile_path}` : no_img} alt={cast.character}/>\n                                            <div>\n                                                <span>{cast.character}</span>\n                                                <span>{cast.name}</span>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                        </Container>\n                    </div>\n                : null\n                }\n            </Dialog>\n        }\n        </div>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport { getRatingsImdb } from '../components/services/getRatingsImdb';\n\n\nexport const useFetchRatings = (imdb_id) => {\n\n    const [state, setState] = useState({\n        ratings: []\n    })\n\n    useEffect( () => {\n        getRatingsImdb(imdb_id) \n            .then( r => {\n                //console.log(r);\n                setState({\n                    ratings: r\n                });\n            })\n    }, [imdb_id]) \n\n    return state;\n}\n\n","import { API_KEY } from \"../../helpers/constants\";\n\nexport const getDetailedMovie = async(id) => {\n\n    try {\n        const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n        const resp = await fetch(url);\n        const jsonMovie = await resp.json();\n\n        return jsonMovie;\n    } catch (error) {\n        //console.log(error);\n        return {};\n    }\n\n}\n\n\n\n","import { API_KEY } from \"../../helpers/constants\";\n\nexport const getCastMovie = async(id) => {\n  \n    try {\n        const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n        const response = await fetch(url);\n        const jsonCast = await response.json();\n        const cast = jsonCast.cast.filter((result) => result.profile_path );\n\n        return cast;\n    } catch (error) {\n        //console.log(error);\n        return [];\n    }\n\n}\n\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Box from '@material-ui/core/Box';\n\nimport no_img from '../img/no_img.png';\nimport { MovieModal } from './ui/MovieModal';\nimport { getDetailedMovie } from './services/getDetailedMovie';\nimport { getCastMovie } from './services/getCastMovie';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n        position: 'relative',\n        borderRadius: '6px'\n    },\n    media: {\n        //height: 0,\n        //paddingTop: '56.25%', // 16:9\n       // height: '420px'\n       height:0,\n       paddingTop: '145%'\n    },\n    cardContent: {\n        display: 'flex',\n        alignItems: 'center',\n        //padding: theme.spacing(1)\n    },\n    cardTitle: {\n        flexGrow: 1,\n    },\n    cardAverage: {\n        display: 'flex',\n        position: 'absolute',\n        /*top: '6px',\n        right: '12px',*/\n        top: 0,\n        right: 0,\n        backgroundColor: 'rgba(0,0,0, .4)',\n        padding: '5px 5px 0 5px',\n        borderBottomLeftRadius: '6px',\n  \n        '& > span:last-child': {\n            alignSelf: 'center'\n        }\n    }\n}));\n\n\n\nconst MovieGridItem = (movie) => {\n    const [movieDetails, setDetailedMovie] = useState([]);\n    const [movieCast, setCastMovie] = useState([]);\n\n    const [open, setOpen] = useState(false);\n\n    const {id, title, original_title, original_language, poster_path, vote_average} = movie;\n\n    // imagenes\n    const img_url = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n    const classes = useStyles();\n\n\n    useEffect(() => {  \n        getDetailedMovie(id)\n            .then(movie => setDetailedMovie(movie))\n    }, [id]);\n\n    useEffect(() => {  \n        getCastMovie(id)\n            .then(cast => setCastMovie(cast))\n    }, [id]);\n\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n\n    return (\n        <>\n            <Card className={classes.root}>\n                \n                <CardMedia\n                    className={classes.media}\n                    image={poster_path ? img_url : no_img}\n                    ///title={title}\n                />\n                  \n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\" className={classes.cardTitle}>\n                        {original_language === 'es' ? original_title : title}\n                    </Typography>\n\n                    <Box className={classes.cardAverage}>\n                        <Typography variant=\"body2\" color=\"secondary\" component=\"span\" style={{lineHeight: 'initial'}}>\n                            <StarBorderIcon className={classes.title} style={{ fontSize: '2rem' }}/>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"secondary\" component=\"span\" style={{ fontSize: '1.4rem'}}>\n                            {vote_average}\n                        </Typography>\n                    </Box>\n                </CardContent>\n                <CardActions style={{display: 'flex', justifyContent: 'center'}}>\n                    <Button \n                    style={{width: '100%'}}\n                        size=\"small\" \n                        color=\"primary\" \n                        //variant=\"outlined\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            //detalles(id);\n                            handleOpen();\n                        }}\n                    >\n                        Ver detalles\n                    </Button>\n                </CardActions>\n\n            </Card>\n        \n\n            {/*\n                // Abrir detalles de la pelicula en una ventana modal\n            */}\n            { open ?  \n                <MovieModal\n                    movieDetails={movieDetails}\n                    movieCast={movieCast}\n                    handleClose={handleClose}\n                    open={open}\n                   // ratings={ratings}\n                />\n            : null}\n        </>\n    )\n}\n\nexport default MovieGridItem;\n\n\n\n/*\n               adult: false\n               backdrop_path: \"/srYya1ZlI97Au4jUYAktDe3avyA.jpg\"\n               belongs_to_collection: {id: 468552, name: \"Wonder Woman Collection\", poster_path: \"/8AQRfTuTHeFTddZN4IUAqprN8Od.jpg\", backdrop_path: \"/n9KlvCOBFDmSyw3BgNrkUkxMFva.jpg\"}\n               budget: 200000000\n               genres: (3) [{…}, {…}, {…}]\n               homepage: \"https://www.warnerbros.com/movies/wonder-woman-1984\"\n               id: 464052\n               imdb_id: \"tt7126948\"\n               original_language: \"en\"\n               original_title: \"Wonder Woman 1984\"\n               overview: \"Wonder Woman comes into conflict with the Soviet Union during the Cold War in the 1980s and finds a formidable foe by the name of the Cheetah.\"\n               popularity: 2089.125\n               poster_path: \"/8UlWHLMpgZm9bx6QYh0NFoq67TZ.jpg\"\n               production_companies: (6) [{…}, {…}, {…}, {…}, {…}, {…}]\n               production_countries: [{…}]\n               release_date: \"2020-12-16\"\n               revenue: 159533000\n               runtime: 152\n               spoken_languages: [{…}]\n               status: \"Released\"\n               tagline: \"A new era of wonder begins.\"\n               title: \"Wonder Woman 1984\"\n               video: false\n               vote_average: 6.9\n               vote_count: 3829\n               \n*/\n\n\n","import { API_KEY } from \"../../helpers/constants\";\n\nexport const getSearchResults = async(busqueda, currentPage) => {\n\n    const { title, genero, puntuacion, year, with_cast, orderBy } = busqueda;\n     \n    let url = '';\n    if (title.trim() !== '') {\n        url = `https://api.themoviedb.org/3/search/movie?query=${title}&api_key=${API_KEY}&page=${currentPage}`;\n    } else {\n        const parameters = [\n            {paramName: 'with_genres', paramValue: genero},\n            {paramName: 'with_cast', paramValue: with_cast},\n            {paramName: 'vote_average.gte', paramValue: puntuacion},\n            {paramName: 'primary_release_year', paramValue: year},\n            {paramName: 'sort_by', paramValue: orderBy},\n        ];        \n        \n        url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${currentPage}`;\n        \n        // TODO: poner un mínimo de vote_count para buscar por puntuación\n\n        const queryParams = parameters.filter( param => \n            param.paramValue !== '' \n        ).map( param =>\n            `${param.paramName}=${encodeURI(param.paramValue)}`\n        ).join(\"&\");\n        // console.log({queryParams}); // son los que no estan vacíos\n    \n        if ( queryParams !== '') {\n            url += `&${queryParams}`;                               \n        }\n\n        //console.log({url});\n        \n    }\n    \n    const resp = await fetch(url);\n    const data = await resp.json();\n\n    return data;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { LinearProgress } from '@material-ui/core';\n\nimport PaginationUi from './ui/PaginationUi';\nimport MovieGridItem from './MovieGridItem';\nimport { getSearchResults } from './services/getSearchResults';\n\n\nconst useStyles = makeStyles((theme) => ({\n    total: {\n        textAlign: 'center',\n        marginTop: '10px'\n    }\n  }));\n\n\nconst MovieGrid = ({busqueda}) => {\n\n    const { title } = busqueda;\n\n    // state de la app\n    const [movies, setMovies] = useState({\n        movies: [],\n        loading: true\n    });\n\n    // Paginacion\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [totalResults, setTotalResults] = useState(1);\n\n\n    useEffect(() => {\n        getSearchResults(busqueda, currentPage)\n            .then(data => {\n                const { results, total_pages, total_results } = data;\n\n                setMovies({\n                    movies: results,\n                    loading: false\n                });  \n                \n                // Guardar el total de paginas\n                setTotalPages(total_pages);\n\n                // Guardar el total de resultados\n                setTotalResults(total_results);\n\n                // TODO: hacer scroll al principio de la búsqueda al cambiar de página\n\n            });\n\n    }, [busqueda, currentPage]);\n\n    // Paginacion\n    const handlePagination = (e, value) => {\n        setCurrentPage(value);\n    };\n\n    \n    const classes = useStyles();\n\n\n    return (\n        <>\n\n        { title && \n            <Typography variant=\"h4\" color=\"textPrimary\" component=\"h3\">\n                Resultados para:&nbsp;\n                <Typography variant=\"h4\" color=\"secondary\" component=\"span\">\n                    {title}\n                </Typography>\n            </Typography>\n        }\n\n        { movies.loading &&\n            <LinearProgress color=\"secondary\" />\n        }\n\n        { movies.movies.length > 0 ?\n            <>\n                <Container maxWidth=\"xl\" className={classes.total}>\n                    <Typography variant=\"h6\" color=\"primary\" component=\"h6\">\n                        {totalResults} películas encontradas\n                    </Typography>\n                </Container>\n\n                <PaginationUi\n                    totalPages={totalPages}\n                    currentPage={currentPage}\n                    handlePagination={handlePagination}\n                />\n\n                <Grid container spacing={3}>\n                    {\n                        movies.movies.map( movie => (\n                            <Grid item xs={4} sm={3} xl={2} key={movie.id}>\n                            <MovieGridItem\n                                key={movie.id}\n                                {...movie}\n                            />\n                            </Grid>\n                        ))\n                    }\n                </Grid>\n                \n                <PaginationUi\n                    totalPages={totalPages}\n                    currentPage={currentPage}\n                    handlePagination={handlePagination}\n                />\n            </>\n        :\n            null\n        }\n\n        {!movies.loading && movies.movies.length < 1 &&\n            <Container maxWidth=\"md\" className={classes.total}>\n                <Alert severity=\"warning\">No se encontraron resultados</Alert>\n            </Container>\n        }\n  \n        </>\n    )\n}\n\nexport default MovieGrid;\n\n","export default __webpack_public_path__ + \"static/media/tmdb_logo_blue_square_2.e51fc2a7.svg\";","import React, {useState} from 'react';\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\n\nimport tmdb_logo from '../../img/tmdb_logo_blue_square_2.svg';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\ttextAlign: 'center',\n\t\tfontSize: '2.5rem'\n\t},\n\tlogo: {\n\t\tmaxWidth: '5rem',\n\t}\n}));\n\n\nconst Menu = ({theme, setTheme, existingPreference}) => {\n\n    const classes = useStyles();\n\n    const [switchState, setSwitchState] = useState(existingPreference === 'light' ? false : true);\n\n    const handleThemeChange = () => {\n\t\tif (theme === \"dark\") {\n\t\t\tsetSwitchState(false);\n\t\t\tsetTheme(\"light\");\n\t\t\tlocalStorage.setItem(\"moviesThemeMode\", \"light\");\n\t\t} else {\n\t\t\tsetSwitchState(true);\n\t\t\tsetTheme(\"dark\");\n\t\t\tlocalStorage.setItem(\"moviesThemeMode\", \"dark\");\n\t\t}\n    };\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n            <img src={tmdb_logo} alt={tmdb_logo} className={classes.logo}/> \n            <Typography variant=\"h2\" className={classes.title}>\n                Movies App\n            </Typography>\n            <FormGroup>\n                <FormControlLabel\n                    control={\n                      \t<Switch checked={switchState} onChange={handleThemeChange} aria-label=\"theme\" />\n                    }\n                    label={switchState ? 'Dark mode' : 'Light mode'}\n                />\n            </FormGroup>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nMenu.propTypes = {\n\ttheme: PropTypes.string,\n  \tsetTheme: PropTypes.func,\n  \texistingPreference: PropTypes.string\n}\n\nexport default Menu;\n","import React, {useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\n//import StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport Typography from '@material-ui/core/Typography';\n\nimport no_img from '../../img/no_img.png';\nimport { useFetch } from '../../hooks/useFetch';\nimport { MovieModal } from './MovieModal';\nimport { getDetailedMovie } from '../services/getDetailedMovie';\nimport { getCastMovie } from '../services/getCastMovie';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n      //color: theme.palette.primary.light,\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    rating: {\n        //color: 'pink'\n    },\n    topSlider: {\n        flexWrap:'nowrap',\n        overflow:'hidden'\n    },\n    topTitle: {\n        fontSize: '2rem',\n        margin: '20px 0 10px 0',\n        borderLeft: '5px solid',\n        paddingLeft: '7px'\n    },\n    gridList: {\n        cursor: 'pointer',\n        '&:hover': {\n            opacity: .5\n        }\n    }\n}));\n\n\nexport const TopMovies = ({topUrl, topTitle}) => {\n\n    // Con el hook useFetch\n    const {data} = useFetch(topUrl);\n    const topMovies = data \n                        ? data.results.filter((result) =>  result.backdrop_path ) \n                        : [];\n\n    const [open, setOpen] = useState(false);\n\n    const [activeMovie, setActiveMovie] = useState({});\n    const [movieCast, setCastMovie] = useState([]);\n\n\n    const handleOpen = (movie) => {\n        getDetailedMovie(movie.id)\n            .then(movie => setActiveMovie(movie));\n        \n        getCastMovie(movie.id)\n            .then(cast => setCastMovie(cast));\n\n        setOpen(true);\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"h3\" color=\"secondary\" component=\"h3\" className={classes.topTitle}>\n                {topTitle}\n            </Typography>\n            <Grid container spacing={0} className={classes.topSlider}> \n                {(topMovies.length > 0) ?\n                    topMovies.slice(0, 6).map(movie => (\n                        <Grid item xs={3} xl={2} key={movie.id} >\n                            <GridList \n                                className={classes.gridList} \n                                cols={1}\n                                onClick={() => {\n                                    handleOpen(movie);\n                                }}\n                            >\n                            <GridListTile key={movie.id} >\n                                <img src={movie.backdrop_path ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}` : no_img} alt={movie.title} className=\"\"/>\n                                <GridListTileBar\n                                    title={movie.title}\n                                    classes={{\n                                        root: classes.titleBar,\n                                        title: classes.title,\n                                    }}\n                                    actionIcon={\n                                        <IconButton aria-label={`star ${movie.title}`} color=\"secondary\">\n                                            <StarIcon className={classes.title} color=\"secondary\"/>\n                                            <span className={classes.rating}>{movie.vote_average}</span>\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                            </GridList>\n                        </Grid>\n                    ))\n                : null}\n            </Grid>\n\n            { open ?  \n                <MovieModal\n                    movieDetails={activeMovie}\n                    movieCast={movieCast}\n                    handleClose={handleClose}\n                    open={open}\n                   // ratings={ratings}\n                />\n            : null}\n\n        </>\n    )\n    \n\n}\n\n","import React, { useState } from 'react';\n\nimport Container from '@material-ui/core/Container';\n// Es como normalize.css para resetear los estilos por defecto del navegador\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { amber, indigo } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\n\nimport Search from './components/Search';\nimport MovieGrid from './components/MovieGrid';\nimport Menu from './components/ui/Menu';\nimport { TopMovies } from './components/ui/TopMovies';\nimport { API_KEY } from './helpers/constants';\nimport './styles.css';\n\n\nfunction MoviesApp() {\n\n\tconst [filters, setFilters] = useState({});\n\n\tconst existingPreference = localStorage.getItem(\"moviesThemeMode\"); \n\tconst initialState = existingPreference === 'light' ? 'light' : 'dark';\n\tconst [darkState, setDarkState] = useState(initialState);  \n\n\tconst palletType = darkState === \"dark\" ? \"dark\" : \"light\";\n\tconst mainPrimaryColor = indigo[500]; //cyan[900]\n\tconst mainSecondaryColor = darkState ? amber[400] : amber[500];\n\tconst textSecondaryColor = darkState ? indigo[300] : indigo[800];\n\n\tconst darkTheme = createMuiTheme({\n\t\tpalette: {\n\t\t\ttype: palletType,\n\t\t\tprimary: {\n\t\t\t\tmain: mainPrimaryColor\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\tmain: mainSecondaryColor\n\t\t\t},\n\t\t\ttext: {\n\t\t\t\tsecondary: textSecondaryColor\n\t\t\t}\n\t\t},\n\t\ttypography: {  \n\t\t\th2: {\n\t\t\t  \tfontFamily: 'Merienda, sans-serif'\n\t\t\t},       \n\t\t\th3: {\n\t\t\t\tfontFamily: 'Merienda, sans-serif'\n\t\t\t},  \n\t\t\th4: {\n\t\t\t\tfontFamily: 'Merienda, sans-serif'\n\t\t\t}, \n\t\t\th6: {\n\t\t\t\tfontFamily: 'Merienda, sans-serif'\n\t\t\t},\n\t\t},\n\t});\n\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tsearch: {\n\t\tbackgroundImage: 'linear-gradient(60deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 75%, rgba(0, 0, 0, 0.1) 75%, rgba(0, 0, 0, 0.1)), linear-gradient(120deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 75%, rgba(0, 0, 0, 0.1) 75%, rgba(0, 0, 0, 0.1))',\n\t\t//border: '1px solid rgba(0, 0, 0, 0.1)',\n\t\tboxShadow: '2px 0px 3px 2px rgb(0 0 0 / 10%)'\n\t\t},\n\t\tfooter: {\n\t\t  color: '#aaa',\n\t\t  margin: '2rem auto',\n\t\t  textAlign: 'center',\n\t\t  width: '70%',\n\t\t  '& a': {\n\t\t\t  color: textSecondaryColor\n\t\t  }\n\t\t}\n\t}));\n\n\n  \tconst classes = useStyles();\n\n\n    const urlNew = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${API_KEY}`;\n\n\tconst urlRating = `https://api.themoviedb.org/3/discover/movie?certification_country=US&certification=R&sort_by=vote_average.desc&vote_count.gte=18000&api_key=${API_KEY}`;\n\n\t// TODO: top upcoming\n\n    return (\n    \n        <ThemeProvider theme={darkTheme}>\n            <CssBaseline />\n\n            <Menu\n              theme={darkState}\n              setTheme={setDarkState}\n              existingPreference={existingPreference}\n            />\n\n            <Container maxWidth=\"xl\">\n\t\t\t\t<TopMovies\n\t\t\t\ttopUrl={urlNew}\n\t\t\t\ttopTitle='Top más populares'\n\t\t\t\t/>\n\n\t\t\t\t<TopMovies\n\t\t\t\ttopUrl={urlRating}\n\t\t\t\ttopTitle='Top mejor valoradas'\n\t\t\t\t/>\n          \t</Container>\n\n          \t<Box margin={'50px auto'} className={classes.search}>\n              \t<Search\n                    setFilters={setFilters}\n                />\n            </Box>\n\n            { Object.keys(filters).length > 0 ?\n                <Container maxWidth=\"xl\">\n                    <MovieGrid\n                        busqueda={filters}\n                    />\n                </Container>\n                : null\n            }  \n\n\t\t\t<footer className={classes.footer}>&copy; Designed and developed by&nbsp;\n            \t<a href=\"https://github.com/tatianallorente/MoviesApp-React\" target=\"_blank\" rel=\"noreferrer\" >Tatiana Llorente</a>\n            </footer>\n\n        </ThemeProvider>\n    );\n}\n\nexport default MoviesApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MoviesApp from './MoviesApp';\n\n\nReactDOM.render(\n    <MoviesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}